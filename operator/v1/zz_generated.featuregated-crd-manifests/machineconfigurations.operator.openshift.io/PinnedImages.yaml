apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.openshift.io: https://github.com/openshift/api/pull/1453
    api.openshift.io/filename-cvo-runlevel: "0000_80"
    api.openshift.io/filename-operator: machine-config
    api.openshift.io/filename-ordering: "01"
    feature-gate.release.openshift.io/PinnedImages: "true"
  name: machineconfigurations.operator.openshift.io
spec:
  group: operator.openshift.io
  names:
    kind: MachineConfiguration
    listKind: MachineConfigurationList
    plural: machineconfigurations
    singular: machineconfiguration
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: "MachineConfiguration provides information to configure an operator
          to manage Machine Configuration. \n Compatibility level 1: Stable within
          a major release for a minimum of 12 months or 3 minor releases (whichever
          is longer)."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec is the specification of the desired behavior of the
              Machine Config Operator
            properties:
              failedRevisionLimit:
                description: failedRevisionLimit is the number of failed static pod
                  installer revisions to keep on disk and in the api -1 = unlimited,
                  0 or unset = 5 (default)
                format: int32
                type: integer
              forceRedeploymentReason:
                description: forceRedeploymentReason can be used to force the redeployment
                  of the operand by providing a unique string. This provides a mechanism
                  to kick a previously failed deployment and provide a reason why
                  you think it will work this time instead of failing again on the
                  same config.
                type: string
              logLevel:
                default: Normal
                description: "logLevel is an intent based logging for an overall component.
                  \ It does not give fine grained control, but it is a simple way
                  to manage coarse grained logging choices that operators have to
                  interpret for their operands. \n Valid values are: \"Normal\", \"Debug\",
                  \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                enum:
                - ""
                - Normal
                - Debug
                - Trace
                - TraceAll
                type: string
              managementState:
                description: managementState indicates whether and how the operator
                  should manage the component
                pattern: ^(Managed|Unmanaged|Force|Removed)$
                type: string
              observedConfig:
                description: observedConfig holds a sparse config that controller
                  has observed from the cluster state.  It exists in spec because
                  it is an input to the level for the operator
                nullable: true
                type: object
                x-kubernetes-preserve-unknown-fields: true
              operatorLogLevel:
                default: Normal
                description: "operatorLogLevel is an intent based logging for the
                  operator itself.  It does not give fine grained control, but it
                  is a simple way to manage coarse grained logging choices that operators
                  have to interpret for themselves. \n Valid values are: \"Normal\",
                  \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\"."
                enum:
                - ""
                - Normal
                - Debug
                - Trace
                - TraceAll
                type: string
              succeededRevisionLimit:
                description: succeededRevisionLimit is the number of successful static
                  pod installer revisions to keep on disk and in the api -1 = unlimited,
                  0 or unset = 5 (default)
                format: int32
                type: integer
              unsupportedConfigOverrides:
                description: unsupportedConfigOverrides overrides the final configuration
                  that was computed by the operator. Red Hat does not support the
                  use of this field. Misuse of this field could lead to unexpected
                  behavior or conflict with other configuration options. Seek guidance
                  from the Red Hat support before using this field. Use of this property
                  blocks cluster upgrades, it must be removed before upgrading your
                  cluster.
                nullable: true
                type: object
                x-kubernetes-preserve-unknown-fields: true
            type: object
          status:
            description: status is the most recently observed status of the Machine
              Config Operator
            properties:
              conditions:
                description: conditions is a list of conditions and their status
                items:
                  description: OperatorCondition is just the standard condition fields.
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              generations:
                description: generations are used to determine when an item needs
                  to be reconciled or has changed in a way that needs a reaction.
                items:
                  description: GenerationStatus keeps track of the generation for
                    a given resource so that decisions about forced updates can be
                    made.
                  properties:
                    group:
                      description: group is the group of the thing you're tracking
                      type: string
                    hash:
                      description: hash is an optional field set for resources without
                        generation that are content sensitive like secrets and configmaps
                      type: string
                    lastGeneration:
                      description: lastGeneration is the last generation of the workload
                        controller involved
                      format: int64
                      type: integer
                    name:
                      description: name is the name of the thing you're tracking
                      type: string
                    namespace:
                      description: namespace is where the thing you're tracking is
                      type: string
                    resource:
                      description: resource is the resource type of the thing you're
                        tracking
                      type: string
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              latestAvailableRevision:
                description: latestAvailableRevision is the deploymentID of the most
                  recent deployment
                format: int32
                type: integer
              latestAvailableRevisionReason:
                description: latestAvailableRevisionReason describe the detailed reason
                  for the most recent deployment
                type: string
              nodeStatuses:
                description: nodeStatuses track the deployment values and errors across
                  individual nodes
                items:
                  description: NodeStatus provides information about the current state
                    of a particular node managed by this operator.
                  properties:
                    currentRevision:
                      description: currentRevision is the generation of the most recently
                        successful deployment
                      format: int32
                      type: integer
                    lastFailedCount:
                      description: lastFailedCount is how often the installer pod
                        of the last failed revision failed.
                      type: integer
                    lastFailedReason:
                      description: lastFailedReason is a machine readable failure
                        reason string.
                      type: string
                    lastFailedRevision:
                      description: lastFailedRevision is the generation of the deployment
                        we tried and failed to deploy.
                      format: int32
                      type: integer
                    lastFailedRevisionErrors:
                      description: lastFailedRevisionErrors is a list of human readable
                        errors during the failed deployment referenced in lastFailedRevision.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    lastFailedTime:
                      description: lastFailedTime is the time the last failed revision
                        failed the last time.
                      format: date-time
                      type: string
                    lastFallbackCount:
                      description: lastFallbackCount is how often a fallback to a
                        previous revision happened.
                      type: integer
                    nodeName:
                      description: nodeName is the name of the node
                      type: string
                    targetRevision:
                      description: targetRevision is the generation of the deployment
                        we're trying to apply
                      format: int32
                      type: integer
                  required:
                  - nodeName
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - nodeName
                x-kubernetes-list-type: map
              nodeSynchronizersStatus:
                description: nodeSynchronizersStatus is the status of the machines
                  managed by the node synchronizers.
                items:
                  properties:
                    availableMachineCount:
                      description: availableMachineCount is the number of machines
                        managed by the node synchronizer which are available.
                      format: int64
                      minimum: 0
                      type: integer
                    machineCount:
                      description: machineCount is the number of machines that are
                        managed by the node synchronizer.
                      format: int64
                      minimum: 0
                      type: integer
                    name:
                      description: name is the name of the node synchronizer. Must
                        be a lowercase RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)
                        It may consist of only alphanumeric characters, hyphens (-)
                        and periods (.) and must be at most 253 characters in length.
                      maxLength: 253
                      pattern: ^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])(\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]))*$
                      type: string
                    nodeSelector:
                      description: nodeSelector specifies a label selector for Machines
                        that match this synchronizer.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    nodeSynchronizerType:
                      description: nodeSynchronizerType is the name of the node synchronizer
                        type.
                      enum:
                      - PinnedImageSets
                      maxLength: 256
                      type: string
                    observedGeneration:
                      description: observedGeneration is the last generation change
                        that has been applied.
                      format: int64
                      minimum: 0
                      type: integer
                    readyMachineCount:
                      description: readyMachineCount is the number of machines managed
                        by the node synchronizer that are in a ready state.
                      format: int64
                      minimum: 0
                      type: integer
                    unavailableMachineCount:
                      description: unavailableMachineCount is the number of machines
                        managed by the node synchronizer but are unavailable.
                      format: int64
                      minimum: 0
                      type: integer
                    updatedMachineCount:
                      description: updatedMachineCount is the number of machines that
                        have been updated by the node synchronizer.
                      format: int64
                      minimum: 0
                      type: integer
                  required:
                  - availableMachineCount
                  - machineCount
                  - name
                  - nodeSynchronizerType
                  - readyMachineCount
                  - unavailableMachineCount
                  - updatedMachineCount
                  type: object
                  x-kubernetes-validations:
                  - message: machineCount must be greater than or equal to updatedMachineCount
                    rule: self.machineCount >= self.updatedMachineCount
                  - message: machineCount must be greater than or equal to availableMachineCount
                    rule: self.machineCount >= self.availableMachineCount
                  - message: machineCount must be greater than or equal to unavailableMachineCount
                    rule: self.machineCount >= self.unavailableMachineCount
                  - message: machineCount must be greater than or equal to readyMachineCount
                    rule: self.machineCount >= self.readyMachineCount
                  - message: availableMachineCount must be greater than or equal to
                      readyMachineCount
                    rule: self.availableMachineCount >= self.readyMachineCount
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              observedGeneration:
                description: observedGeneration is the last generation change you've
                  dealt with
                format: int64
                type: integer
              readyReplicas:
                description: readyReplicas indicates how many replicas are ready and
                  at the desired state
                format: int32
                type: integer
              version:
                description: version is the level this availability applies to
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
