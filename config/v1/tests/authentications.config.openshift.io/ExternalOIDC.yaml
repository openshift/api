apiVersion: apiextensions.k8s.io/v1 # Hack because controller-gen complains if we don't have this
name: "Authentication"
crdName: authentications.config.openshift.io
featureGates:
  - ExternalOIDC
tests:
  onCreate:
    - name: Should be able to create a minimal Authentication
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec: {} # No spec is required for a Authentication
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec: {}
    - name: Should be able to use the OIDC type
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
    - name: Cannot set username claim prefix with policy NoPrefix
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "preferred_username"
                prefixPolicy: NoPrefix
                prefix:
                  prefixString: "myoidc:"
      expectedError: "prefix must be set if prefixPolicy is 'Prefix', but must remain unset otherwise"
    - name: Can set username claim prefix with policy Prefix
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "preferred_username"
                prefixPolicy: Prefix
                prefix:
                  prefixString: "myoidc:"
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "preferred_username"
                prefixPolicy: Prefix
                prefix:
                  prefixString: "myoidc:"
    - name: Cannot leave username claim prefix blank with policy Prefix
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "preferred_username"
                prefixPolicy: Prefix
      expectedError: "prefix must be set if prefixPolicy is 'Prefix', but must remain unset otherwise"
    - name: Can set OIDC providers with no username prefixing
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "preferred_username"
                prefixPolicy: NoPrefix
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "preferred_username"
                prefixPolicy: NoPrefix
    - name: Cannot set OIDC providers with no claim mappings
      initial: |
        apiVersion: config.openshift.io/v1 
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
      expectedError: "Required value"
    - name: Cannot set OIDC providers with no username claim mapping
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              groups:
                claim: roles
      expectedError: "Required value"
    - name: Can set OIDC providers with empty group claim mapping
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "username"
              groups:
                claim: ""
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "username"
              groups:
                claim: ""
    - name: Cannot set OIDC Provider with an issuer URL with a fragment
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld/#fragment
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "username"
      expectedError: "must not have a fragment"
    - name: Cannot set OIDC Provider with an issuer URL with a query
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld?key=value
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "username"
      expectedError: "must not have a query"
    - name: Cannot set OIDC Provider with an issuer URL using non-https scheme
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: http://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "username"
      expectedError: "must use the 'https' scheme"
    - name: Cannot set OIDC Provider with an issuer URL including user info
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: "https://username:password@meh.tld"
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "username"
      expectedError: "must not have user info"
    - name: Cannot set OIDC Provider with an issuer URL that is not a URL, even if it uses the https scheme
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: "https://!&^(!*&07s6da..sdjfya897w6234k.....s76r872)"
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "username"
      expectedError: "must be a valid URL"
  onUpdate:
    - name: Updating OIDC provider with a client that's not in the status
      initial: &initConfig |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: username
            oidcClients:
              - componentNamespace: namespace
                componentName: preexisting
                clientID: someclient
              - componentNamespace: namespace
                componentName: name
                clientID: legitclient
        status:
          oidcClients:
          - componentNamespace: namespace
            componentName: name
          - componentNamespace: namespace2
            componentName: name2
          - componentNamespace: namespace2
            componentName: name3
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: username
            oidcClients:
            - componentNamespace: namespace
              componentName: preexisting
              clientID: someclient
            - componentNamespace: namespace
              componentName: name
              clientID: legitclient
            - componentNamespace: dif-namespace # new client here
              componentName: tehName
              clientID: cool-client
        status:
          oidcClients:
          - componentNamespace: namespace
            componentName: name
          - componentNamespace: namespace2
            componentName: name2
          - componentNamespace: namespace2
            componentName: name3
      expectedError: "all oidcClients in the oidcProviders must match their componentName and componentNamespace to either a previously configured oidcClient or they must exist in the status.oidcClients"
    - name: Updating OIDC provider with a client that's different from the previous one
      initial: *initConfig
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: username
            oidcClients:
            - componentNamespace: dif-namespace
              componentName: tehName
              clientID: cool-client
        status:
          oidcClients:
          - componentNamespace: namespace
            componentName: name
          - componentNamespace: namespace2
            componentName: name2
          - componentNamespace: namespace2
            componentName: name3
      expectedError: "all oidcClients in the oidcProviders must match their componentName and componentNamespace to either a previously configured oidcClient or they must exist in the status.oidcClients"
    - name: Updating previously existing client
      initial: *initConfig
      updated: &prevExistingUpdated |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: username
            oidcClients:
              - componentNamespace: namespace
                componentName: preexisting
                clientID: different-client
        status:
          oidcClients:
          - componentNamespace: namespace
            componentName: name
          - componentNamespace: namespace2
            componentName: name2
          - componentNamespace: namespace2
            componentName: name3
      expected: *prevExistingUpdated
    - name: Removing a configured client from the status (== component unregister)
      initial: *initConfig
      updated: &removeFromStatus |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: username
            oidcClients:
              - componentNamespace: namespace
                componentName: preexisting
                clientID: different-client
              - componentNamespace: namespace
                componentName: name
                clientID: legitclient
        status:
          oidcClients:
          - componentNamespace: namespace2
            componentName: name2
          - componentNamespace: namespace2
            componentName: name3
      expected: *removeFromStatus
    - name: Simply add a valid client
      initial: *initConfig
      updated: &addClient |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: username
            oidcClients:
              - componentNamespace: namespace
                componentName: preexisting
                clientID: different-client
              - componentNamespace: namespace
                componentName: name
                clientID: legitclient
              - componentNamespace: namespace2
                componentName: name3
                clientID: justavalidclient
        status:
          oidcClients:
          - componentNamespace: namespace
            componentName: name
          - componentNamespace: namespace2
            componentName: name2
          - componentNamespace: namespace2
            componentName: name3
      expected: *addClient
    - name: Remove all oidcProviders
      initial: *initConfig
      updated: &removeFromStatus |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
        status:
          oidcClients:
          - componentNamespace: namespace2
            componentName: name2
          - componentNamespace: namespace2
            componentName: name3
      expected: *removeFromStatus
    - name: Should allow updating other fields if existing username claim mapping is empty string
      initialCRDPatches:
        - op: remove
          path: /spec/versions/0/schema/openAPIV3Schema/properties/spec/properties/oidcProviders/items/properties/claimMappings/properties/username/properties/claim/minLength
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: ""
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://huh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: ""
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://huh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: ""
    - name: Should allow updating other fields if existing username claim mapping is longer than 256 characters
      initialCRDPatches:
        - op: remove
          path: /spec/versions/0/schema/openAPIV3Schema/properties/spec/properties/oidcProviders/items/properties/claimMappings/properties/username/properties/claim/maxLength
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "thisisanincrediblylongclaimnamethatwhileacceptableinjwtsisgenerallyadvisedagainstbecauseitisextremelylongandnoteasilyusablebutmaybethereisausecaseouttherethathasdecidedthattheyneedtousethisextremelylongclaimnameforsomereasoneventhoughtheyreallyshouldreconsiderthis"
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://huh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "thisisanincrediblylongclaimnamethatwhileacceptableinjwtsisgenerallyadvisedagainstbecauseitisextremelylongandnoteasilyusablebutmaybethereisausecaseouttherethathasdecidedthattheyneedtousethisextremelylongclaimnameforsomereasoneventhoughtheyreallyshouldreconsiderthis"
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://huh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "thisisanincrediblylongclaimnamethatwhileacceptableinjwtsisgenerallyadvisedagainstbecauseitisextremelylongandnoteasilyusablebutmaybethereisausecaseouttherethathasdecidedthattheyneedtousethisextremelylongclaimnameforsomereasoneventhoughtheyreallyshouldreconsiderthis"
    - name: Should allow updating other fields if issuerURL contains fragment
      initialCRDPatches:
        - op: remove
          path: /spec/versions/0/schema/openAPIV3Schema/properties/spec/properties/oidcProviders/items/properties/issuer/properties/issuerURL/x-kubernetes-validations/3
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld/#fragment
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld/#fragment
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "newclaim"
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld/#fragment
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "newclaim"
    - name: Should allow updating issuerURL from a previously invalid value to a valid value (fragment)
      initialCRDPatches:
        - op: remove
          path: /spec/versions/0/schema/openAPIV3Schema/properties/spec/properties/oidcProviders/items/properties/issuer/properties/issuerURL/x-kubernetes-validations/3
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld/#fragment
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
    - name: Should not allow updating issuerURL from a previously invalid value to a still invalid value (fragment)
      initialCRDPatches:
        - op: remove
          path: /spec/versions/0/schema/openAPIV3Schema/properties/spec/properties/oidcProviders/items/properties/issuer/properties/issuerURL/x-kubernetes-validations/3
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld/#fragment
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld/#newFragment
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
      expectedError: "must not have a fragment"
    - name: Should allow updating other fields if issuerURL is not a valid URL using the https scheme
      initialCRDPatches:
        # removes all validations because every CEL check fails when invalid URL
        - op: remove
          path: /spec/versions/0/schema/openAPIV3Schema/properties/spec/properties/oidcProviders/items/properties/issuer/properties/issuerURL/x-kubernetes-validations
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://!&^(!*&07s6da..sdjfya897w6234k.....s76r872)
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://!&^(!*&07s6da..sdjfya897w6234k.....s76r872)
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "newclaim"
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://!&^(!*&07s6da..sdjfya897w6234k.....s76r872)
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "newclaim"
    - name: Should allow updating other fields if issuerURL has a query
      initialCRDPatches:
        - op: remove
          path: /spec/versions/0/schema/openAPIV3Schema/properties/spec/properties/oidcProviders/items/properties/issuer/properties/issuerURL/x-kubernetes-validations/2
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld?key=value
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld?key=value
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "newclaim"
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld?key=value
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "newclaim"
    - name: Should allow updating issuerURL from a previously invalid value to a valid value (query)
      initialCRDPatches:
        - op: remove
          path: /spec/versions/0/schema/openAPIV3Schema/properties/spec/properties/oidcProviders/items/properties/issuer/properties/issuerURL/x-kubernetes-validations/2
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld?key=value
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
    - name: Should not allow updating issuerURL from a previously invalid value to a still invalid value (query)
      initialCRDPatches:
        - op: remove
          path: /spec/versions/0/schema/openAPIV3Schema/properties/spec/properties/oidcProviders/items/properties/issuer/properties/issuerURL/x-kubernetes-validations/2
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld?key=value
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld?newKey=value
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
      expectedError: "must not have a query"
    - name: Should allow updating other fields if issuerURL has userinfo
      initialCRDPatches:
        - op: remove
          path: /spec/versions/0/schema/openAPIV3Schema/properties/spec/properties/oidcProviders/items/properties/issuer/properties/issuerURL/x-kubernetes-validations/4
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://username:password@meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://username:password@meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "newclaim"
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://username:password@meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "newclaim"
    - name: Should allow updating issuerURL from a previously invalid value to a valid value (userinfo)
      initialCRDPatches:
        - op: remove
          path: /spec/versions/0/schema/openAPIV3Schema/properties/spec/properties/oidcProviders/items/properties/issuer/properties/issuerURL/x-kubernetes-validations/4
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://user:pass@meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
    - name: Should not allow updating issuerURL from a previously invalid value to a still invalid value (userinfo)
      initialCRDPatches:
        - op: remove
          path: /spec/versions/0/schema/openAPIV3Schema/properties/spec/properties/oidcProviders/items/properties/issuer/properties/issuerURL/x-kubernetes-validations/4
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://user:pass@meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Authentication
        spec:
          type: OIDC
          oidcProviders:
          - name: myoidc
            issuer:
              issuerURL: https://username:password@meh.tld
              audiences: ['openshift-aud']
            claimMappings:
              username:
                claim: "claim"
      expectedError: "must not have user info"
