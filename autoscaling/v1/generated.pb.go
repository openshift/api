// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/openshift/api/autoscaling/v1/generated.proto

package v1

import (
	fmt "fmt"

	io "io"

	proto "github.com/gogo/protobuf/proto"

	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

func (m *ClusterAutoscaler) Reset()      { *m = ClusterAutoscaler{} }
func (*ClusterAutoscaler) ProtoMessage() {}
func (*ClusterAutoscaler) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc034ed6bfaf2ab4, []int{0}
}
func (m *ClusterAutoscaler) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterAutoscaler) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ClusterAutoscaler) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterAutoscaler.Merge(m, src)
}
func (m *ClusterAutoscaler) XXX_Size() int {
	return m.Size()
}
func (m *ClusterAutoscaler) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterAutoscaler.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterAutoscaler proto.InternalMessageInfo

func (m *ClusterAutoscalerList) Reset()      { *m = ClusterAutoscalerList{} }
func (*ClusterAutoscalerList) ProtoMessage() {}
func (*ClusterAutoscalerList) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc034ed6bfaf2ab4, []int{1}
}
func (m *ClusterAutoscalerList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterAutoscalerList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ClusterAutoscalerList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterAutoscalerList.Merge(m, src)
}
func (m *ClusterAutoscalerList) XXX_Size() int {
	return m.Size()
}
func (m *ClusterAutoscalerList) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterAutoscalerList.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterAutoscalerList proto.InternalMessageInfo

func (m *ClusterAutoscalerSpec) Reset()      { *m = ClusterAutoscalerSpec{} }
func (*ClusterAutoscalerSpec) ProtoMessage() {}
func (*ClusterAutoscalerSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc034ed6bfaf2ab4, []int{2}
}
func (m *ClusterAutoscalerSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterAutoscalerSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ClusterAutoscalerSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterAutoscalerSpec.Merge(m, src)
}
func (m *ClusterAutoscalerSpec) XXX_Size() int {
	return m.Size()
}
func (m *ClusterAutoscalerSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterAutoscalerSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterAutoscalerSpec proto.InternalMessageInfo

func (m *ClusterAutoscalerStatus) Reset()      { *m = ClusterAutoscalerStatus{} }
func (*ClusterAutoscalerStatus) ProtoMessage() {}
func (*ClusterAutoscalerStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc034ed6bfaf2ab4, []int{3}
}
func (m *ClusterAutoscalerStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterAutoscalerStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ClusterAutoscalerStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterAutoscalerStatus.Merge(m, src)
}
func (m *ClusterAutoscalerStatus) XXX_Size() int {
	return m.Size()
}
func (m *ClusterAutoscalerStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterAutoscalerStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterAutoscalerStatus proto.InternalMessageInfo

func (m *GPULimit) Reset()      { *m = GPULimit{} }
func (*GPULimit) ProtoMessage() {}
func (*GPULimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc034ed6bfaf2ab4, []int{4}
}
func (m *GPULimit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GPULimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GPULimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GPULimit.Merge(m, src)
}
func (m *GPULimit) XXX_Size() int {
	return m.Size()
}
func (m *GPULimit) XXX_DiscardUnknown() {
	xxx_messageInfo_GPULimit.DiscardUnknown(m)
}

var xxx_messageInfo_GPULimit proto.InternalMessageInfo

func (m *ResourceLimits) Reset()      { *m = ResourceLimits{} }
func (*ResourceLimits) ProtoMessage() {}
func (*ResourceLimits) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc034ed6bfaf2ab4, []int{5}
}
func (m *ResourceLimits) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceLimits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ResourceLimits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceLimits.Merge(m, src)
}
func (m *ResourceLimits) XXX_Size() int {
	return m.Size()
}
func (m *ResourceLimits) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceLimits.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceLimits proto.InternalMessageInfo

func (m *ResourceRange) Reset()      { *m = ResourceRange{} }
func (*ResourceRange) ProtoMessage() {}
func (*ResourceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc034ed6bfaf2ab4, []int{6}
}
func (m *ResourceRange) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ResourceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceRange.Merge(m, src)
}
func (m *ResourceRange) XXX_Size() int {
	return m.Size()
}
func (m *ResourceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceRange.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceRange proto.InternalMessageInfo

func (m *ScaleDownConfig) Reset()      { *m = ScaleDownConfig{} }
func (*ScaleDownConfig) ProtoMessage() {}
func (*ScaleDownConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc034ed6bfaf2ab4, []int{7}
}
func (m *ScaleDownConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ScaleDownConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ScaleDownConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScaleDownConfig.Merge(m, src)
}
func (m *ScaleDownConfig) XXX_Size() int {
	return m.Size()
}
func (m *ScaleDownConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ScaleDownConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ScaleDownConfig proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ClusterAutoscaler)(nil), "github.com.openshift.api.autoscaling.v1.ClusterAutoscaler")
	proto.RegisterType((*ClusterAutoscalerList)(nil), "github.com.openshift.api.autoscaling.v1.ClusterAutoscalerList")
	proto.RegisterType((*ClusterAutoscalerSpec)(nil), "github.com.openshift.api.autoscaling.v1.ClusterAutoscalerSpec")
	proto.RegisterType((*ClusterAutoscalerStatus)(nil), "github.com.openshift.api.autoscaling.v1.ClusterAutoscalerStatus")
	proto.RegisterType((*GPULimit)(nil), "github.com.openshift.api.autoscaling.v1.GPULimit")
	proto.RegisterType((*ResourceLimits)(nil), "github.com.openshift.api.autoscaling.v1.ResourceLimits")
	proto.RegisterType((*ResourceRange)(nil), "github.com.openshift.api.autoscaling.v1.ResourceRange")
	proto.RegisterType((*ScaleDownConfig)(nil), "github.com.openshift.api.autoscaling.v1.ScaleDownConfig")
}

func init() {
	proto.RegisterFile("github.com/openshift/api/autoscaling/v1/generated.proto", fileDescriptor_dc034ed6bfaf2ab4)
}

var fileDescriptor_dc034ed6bfaf2ab4 = []byte{
	// 965 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x36, 0x65, 0xc9, 0xb6, 0xd6, 0x3f, 0xb1, 0x17, 0x0e, 0x4a, 0x3b, 0x8d, 0x68, 0xe8, 0x52,
	0xf7, 0x50, 0xaa, 0x0e, 0x82, 0x38, 0xe8, 0xa1, 0x48, 0x68, 0xb5, 0x46, 0x00, 0xab, 0x15, 0x56,
	0x36, 0x52, 0xa4, 0x05, 0x9a, 0x35, 0x39, 0xa6, 0x36, 0x26, 0xb9, 0xc4, 0xee, 0xd2, 0xb5, 0x7a,
	0xea, 0x23, 0xf4, 0x11, 0xfa, 0x0c, 0x7d, 0x83, 0xde, 0x7c, 0x0c, 0x50, 0xa0, 0xc8, 0x89, 0xa8,
	0xd9, 0x17, 0x29, 0xb8, 0xa2, 0xad, 0x3f, 0x2b, 0x50, 0xd3, 0x1b, 0xf7, 0x9b, 0xf9, 0xbe, 0x6f,
	0xb8, 0x33, 0x3b, 0x68, 0xdf, 0x67, 0xaa, 0x9b, 0x9c, 0xda, 0x2e, 0x0f, 0x1b, 0x3c, 0x86, 0x48,
	0x76, 0xd9, 0x99, 0x6a, 0xd0, 0x98, 0x35, 0x68, 0xa2, 0xb8, 0x74, 0x69, 0xc0, 0x22, 0xbf, 0x71,
	0xb1, 0xd7, 0xf0, 0x21, 0x02, 0x41, 0x15, 0x78, 0x76, 0x2c, 0xb8, 0xe2, 0xf8, 0x93, 0x01, 0xd1,
	0xbe, 0x25, 0xda, 0x34, 0x66, 0xf6, 0x10, 0xd1, 0xbe, 0xd8, 0xdb, 0xfe, 0x6c, 0xc8, 0xc1, 0xe7,
	0x3e, 0x6f, 0x68, 0xfe, 0x69, 0x72, 0xa6, 0x4f, 0xfa, 0xa0, 0xbf, 0xfa, 0xba, 0xdb, 0x8f, 0xcf,
	0x9f, 0x4a, 0x9b, 0xf1, 0xbc, 0x84, 0x90, 0xba, 0x5d, 0x16, 0x81, 0xe8, 0x35, 0xe2, 0x73, 0x3f,
	0x07, 0x64, 0x23, 0x04, 0x45, 0xef, 0xa8, 0x66, 0xfb, 0xc9, 0x34, 0x96, 0x48, 0x22, 0xc5, 0x42,
	0x68, 0x48, 0xb7, 0x0b, 0x21, 0x1d, 0xe7, 0xd5, 0xff, 0x28, 0xa1, 0x8d, 0x83, 0x20, 0x91, 0x0a,
	0xc4, 0xf3, 0xa2, 0x6c, 0x10, 0xf8, 0x35, 0x5a, 0xca, 0x8d, 0x3c, 0xaa, 0xa8, 0x69, 0xec, 0x18,
	0xbb, 0xcb, 0x8f, 0x3e, 0xb7, 0xfb, 0x06, 0xf6, 0xb0, 0x81, 0x1d, 0x9f, 0xfb, 0x39, 0x20, 0xed,
	0x3c, 0xdb, 0xbe, 0xd8, 0xb3, 0xbf, 0x3d, 0x7d, 0x03, 0xae, 0x6a, 0x81, 0xa2, 0x0e, 0xbe, 0x4a,
	0xad, 0xb9, 0x2c, 0xb5, 0xd0, 0x00, 0x23, 0xb7, 0xaa, 0xf8, 0x35, 0x2a, 0xcb, 0x18, 0x5c, 0xb3,
	0xa4, 0xd5, 0xbf, 0xb4, 0x67, 0xbc, 0x4c, 0x7b, 0xa2, 0xd6, 0x4e, 0x0c, 0xae, 0xb3, 0x52, 0x78,
	0x95, 0xf3, 0x13, 0xd1, 0xca, 0xb8, 0x8b, 0x16, 0xa4, 0xa2, 0x2a, 0x91, 0xe6, 0xbc, 0xf6, 0x78,
	0xf6, 0x3f, 0x3c, 0xb4, 0x8e, 0xb3, 0x56, 0xb8, 0x2c, 0xf4, 0xcf, 0xa4, 0xd0, 0xaf, 0xff, 0x65,
	0xa0, 0xfb, 0x13, 0x9c, 0x23, 0x26, 0x15, 0xfe, 0x61, 0xe2, 0x1e, 0xed, 0xd9, 0xee, 0x31, 0x67,
	0xeb, 0x5b, 0x5c, 0x2f, 0x3c, 0x97, 0x6e, 0x90, 0xa1, 0x3b, 0xfc, 0x11, 0x55, 0x98, 0x82, 0x50,
	0x9a, 0xa5, 0x9d, 0xf9, 0xdd, 0xe5, 0x47, 0x5f, 0x7c, 0xf8, 0x0f, 0x3a, 0xab, 0x85, 0x4d, 0xe5,
	0x45, 0x2e, 0x48, 0xfa, 0xba, 0xf5, 0xdf, 0x2a, 0x77, 0xfc, 0x58, 0x7e, 0xc5, 0x58, 0xa2, 0x35,
	0x01, 0x92, 0x27, 0xc2, 0x85, 0x23, 0x16, 0x32, 0x25, 0x8b, 0xdf, 0xdb, 0x9f, 0xb9, 0x06, 0x32,
	0x42, 0x77, 0x70, 0x96, 0x5a, 0x6b, 0xa3, 0x18, 0x19, 0xb3, 0xc0, 0x80, 0xaa, 0xba, 0x84, 0x26,
	0xff, 0x29, 0x2a, 0x06, 0xe7, 0xe9, 0xcc, 0x7e, 0x9d, 0x1b, 0xe6, 0x01, 0x8f, 0xce, 0x98, 0xef,
	0xac, 0x66, 0xa9, 0x55, 0xbd, 0x05, 0xc9, 0x40, 0x19, 0x1f, 0xa0, 0x8d, 0x90, 0x5e, 0xb6, 0xb9,
	0x77, 0x28, 0xa8, 0x0b, 0x6d, 0x10, 0x8c, 0x7b, 0x7a, 0x86, 0x2a, 0xce, 0xfd, 0x2c, 0xb5, 0x36,
	0x5a, 0xe3, 0x41, 0x32, 0x99, 0x8f, 0x8f, 0xd0, 0x66, 0xcc, 0xbd, 0xb6, 0x60, 0x5c, 0x30, 0xd5,
	0x3b, 0xee, 0x0a, 0x90, 0x5d, 0x1e, 0x78, 0x66, 0x59, 0xeb, 0x98, 0x59, 0x6a, 0x6d, 0xb6, 0xef,
	0x88, 0x93, 0x3b, 0x59, 0xf8, 0x3b, 0x64, 0x9e, 0xd2, 0x80, 0x46, 0x2e, 0x74, 0x58, 0xc8, 0x02,
	0x2a, 0xbe, 0xe1, 0x1e, 0x1c, 0x0a, 0x9e, 0xc4, 0xd2, 0xac, 0xec, 0x18, 0xbb, 0x4b, 0xce, 0xc7,
	0x59, 0x6a, 0x99, 0xce, 0x94, 0x1c, 0x32, 0x95, 0x8d, 0x29, 0x7a, 0xc0, 0xfc, 0x88, 0x0b, 0x68,
	0x52, 0x08, 0x79, 0x24, 0x41, 0xc9, 0x13, 0xc5, 0x02, 0xf6, 0x33, 0x55, 0x8c, 0x47, 0xe6, 0x82,
	0x16, 0xb7, 0xb2, 0xd4, 0x7a, 0xf0, 0x62, 0x7a, 0x1a, 0x79, 0x9f, 0x06, 0xfe, 0x1e, 0x6d, 0xc9,
	0x73, 0x16, 0xe7, 0xa6, 0xf2, 0x25, 0x53, 0xdd, 0x23, 0xee, 0xd2, 0xa0, 0xa3, 0xb8, 0xa0, 0x3e,
	0x98, 0x8b, 0xda, 0xe0, 0x61, 0x96, 0x5a, 0x5b, 0x9d, 0x69, 0x49, 0x64, 0x3a, 0xbf, 0xbe, 0x85,
	0x3e, 0x9a, 0xf2, 0x5c, 0xeb, 0x6f, 0xd0, 0xd2, 0x61, 0xfb, 0x44, 0xcf, 0x0e, 0xde, 0x41, 0x65,
	0xd5, 0x8b, 0x41, 0x4f, 0x69, 0x75, 0xb0, 0x2e, 0x8e, 0x7b, 0x31, 0x10, 0x1d, 0xc1, 0x0f, 0xd1,
	0x7c, 0xc8, 0xfa, 0x63, 0x55, 0x71, 0x96, 0x8b, 0x84, 0xf9, 0x16, 0x8b, 0x48, 0x8e, 0xeb, 0x30,
	0xbd, 0x2c, 0xc6, 0x60, 0x10, 0xa6, 0x97, 0x24, 0xc7, 0xeb, 0x7f, 0x96, 0xd0, 0xd8, 0xf4, 0xe2,
	0x7d, 0xb4, 0x1a, 0xd2, 0x4b, 0x5d, 0xf5, 0x31, 0x57, 0x34, 0xd0, 0xde, 0x15, 0x67, 0x23, 0x4b,
	0xad, 0xd5, 0xd6, 0x70, 0x80, 0x8c, 0xe6, 0xe1, 0x97, 0xa8, 0xe2, 0x72, 0x01, 0xb2, 0x18, 0xf1,
	0x27, 0xff, 0xf9, 0x49, 0x11, 0x1a, 0xf9, 0xe0, 0x54, 0xf3, 0xe7, 0x7c, 0x90, 0x0b, 0x91, 0xbe,
	0x1e, 0x7e, 0x85, 0x16, 0x42, 0x08, 0xb9, 0xe8, 0x15, 0x1b, 0xf1, 0x43, 0x95, 0x51, 0xbe, 0x03,
	0x5b, 0x5a, 0x89, 0x14, 0x8a, 0xb8, 0x83, 0xca, 0x7e, 0x9c, 0x48, 0xb3, 0xac, 0x57, 0xd1, 0xde,
	0xcc, 0xca, 0x37, 0x1d, 0x1a, 0xf4, 0xe4, 0xb0, 0x7d, 0xd2, 0x21, 0x5a, 0xac, 0xde, 0x42, 0xab,
	0x23, 0xce, 0x37, 0x4d, 0x32, 0xde, 0xdf, 0xa4, 0xd2, 0x94, 0x26, 0xfd, 0x5e, 0x42, 0xf7, 0xc6,
	0xd6, 0x00, 0xfe, 0x14, 0x2d, 0x42, 0x44, 0x4f, 0x03, 0xf0, 0xb4, 0xea, 0x92, 0x73, 0xaf, 0xa0,
	0x2d, 0x7e, 0xd5, 0x87, 0xc9, 0x4d, 0x3c, 0x6f, 0xa8, 0x07, 0x01, 0xed, 0x3d, 0x3f, 0xcb, 0xa7,
	0xcd, 0xf3, 0xb4, 0x4f, 0xb5, 0xdf, 0xd0, 0xe6, 0x70, 0x80, 0x8c, 0xe6, 0xe1, 0x67, 0x68, 0x7d,
	0x00, 0x34, 0x21, 0x00, 0x05, 0xba, 0x03, 0x55, 0x67, 0x33, 0x4b, 0xad, 0xf5, 0xe6, 0x58, 0x8c,
	0x4c, 0x64, 0xe7, 0x2b, 0x69, 0x80, 0x7d, 0x4d, 0x59, 0x90, 0x08, 0xd0, 0xab, 0xa4, 0xda, 0x5f,
	0x49, 0xcd, 0xf1, 0x20, 0x99, 0xcc, 0xc7, 0x8f, 0xd1, 0x4a, 0x12, 0x45, 0x00, 0x1e, 0x78, 0xc7,
	0x2c, 0x04, 0xbd, 0x38, 0xaa, 0xce, 0x7a, 0x96, 0x5a, 0x2b, 0x27, 0x43, 0x38, 0x19, 0xc9, 0x72,
	0x76, 0xaf, 0xae, 0x6b, 0x73, 0x6f, 0xaf, 0x6b, 0x73, 0xef, 0xae, 0x6b, 0x73, 0xbf, 0x64, 0x35,
	0xe3, 0x2a, 0xab, 0x19, 0x6f, 0xb3, 0x9a, 0xf1, 0x2e, 0xab, 0x19, 0x7f, 0x67, 0x35, 0xe3, 0xd7,
	0x7f, 0x6a, 0x73, 0xaf, 0x4a, 0x17, 0x7b, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xfb, 0xa0, 0xf9,
	0x1b, 0x4a, 0x09, 0x00, 0x00,
}

func (m *ClusterAutoscaler) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterAutoscaler) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterAutoscaler) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.Spec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.ObjectMeta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ClusterAutoscalerList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterAutoscalerList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterAutoscalerList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size, err := m.ListMeta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ClusterAutoscalerSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterAutoscalerSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterAutoscalerSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SkipNodesWithLocalStorage != nil {
		i--
		if *m.SkipNodesWithLocalStorage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.IgnoreDaemonsetsUtilization != nil {
		i--
		if *m.IgnoreDaemonsetsUtilization {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.BalanceSimilarNodeGroups != nil {
		i--
		if *m.BalanceSimilarNodeGroups {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.PodPriorityThreshold != nil {
		i = encodeVarintGenerated(dAtA, i, uint64(*m.PodPriorityThreshold))
		i--
		dAtA[i] = 0x20
	}
	if m.MaxPodGracePeriod != nil {
		i = encodeVarintGenerated(dAtA, i, uint64(*m.MaxPodGracePeriod))
		i--
		dAtA[i] = 0x18
	}
	if m.ScaleDown != nil {
		{
			size, err := m.ScaleDown.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.ResourceLimits != nil {
		{
			size, err := m.ResourceLimits.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ClusterAutoscalerStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterAutoscalerStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterAutoscalerStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *GPULimit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GPULimit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GPULimit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintGenerated(dAtA, i, uint64(m.Max))
	i--
	dAtA[i] = 0x18
	i = encodeVarintGenerated(dAtA, i, uint64(m.Min))
	i--
	dAtA[i] = 0x10
	i -= len(m.Type)
	copy(dAtA[i:], m.Type)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Type)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ResourceLimits) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceLimits) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceLimits) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GPUS) > 0 {
		for iNdEx := len(m.GPUS) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GPUS[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Memory != nil {
		{
			size, err := m.Memory.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Cores != nil {
		{
			size, err := m.Cores.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.MaxNodesTotal != nil {
		i = encodeVarintGenerated(dAtA, i, uint64(*m.MaxNodesTotal))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ResourceRange) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceRange) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceRange) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintGenerated(dAtA, i, uint64(m.Max))
	i--
	dAtA[i] = 0x10
	i = encodeVarintGenerated(dAtA, i, uint64(m.Min))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *ScaleDownConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ScaleDownConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ScaleDownConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UnneededTime != nil {
		i -= len(*m.UnneededTime)
		copy(dAtA[i:], *m.UnneededTime)
		i = encodeVarintGenerated(dAtA, i, uint64(len(*m.UnneededTime)))
		i--
		dAtA[i] = 0x2a
	}
	if m.DelayAfterFailure != nil {
		i -= len(*m.DelayAfterFailure)
		copy(dAtA[i:], *m.DelayAfterFailure)
		i = encodeVarintGenerated(dAtA, i, uint64(len(*m.DelayAfterFailure)))
		i--
		dAtA[i] = 0x22
	}
	if m.DelayAfterDelete != nil {
		i -= len(*m.DelayAfterDelete)
		copy(dAtA[i:], *m.DelayAfterDelete)
		i = encodeVarintGenerated(dAtA, i, uint64(len(*m.DelayAfterDelete)))
		i--
		dAtA[i] = 0x1a
	}
	if m.DelayAfterAdd != nil {
		i -= len(*m.DelayAfterAdd)
		copy(dAtA[i:], *m.DelayAfterAdd)
		i = encodeVarintGenerated(dAtA, i, uint64(len(*m.DelayAfterAdd)))
		i--
		dAtA[i] = 0x12
	}
	i--
	if m.Enabled {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func encodeVarintGenerated(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenerated(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ClusterAutoscaler) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ObjectMeta.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Spec.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Status.Size()
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *ClusterAutoscalerList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ListMeta.Size()
	n += 1 + l + sovGenerated(uint64(l))
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *ClusterAutoscalerSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ResourceLimits != nil {
		l = m.ResourceLimits.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.ScaleDown != nil {
		l = m.ScaleDown.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.MaxPodGracePeriod != nil {
		n += 1 + sovGenerated(uint64(*m.MaxPodGracePeriod))
	}
	if m.PodPriorityThreshold != nil {
		n += 1 + sovGenerated(uint64(*m.PodPriorityThreshold))
	}
	if m.BalanceSimilarNodeGroups != nil {
		n += 2
	}
	if m.IgnoreDaemonsetsUtilization != nil {
		n += 2
	}
	if m.SkipNodesWithLocalStorage != nil {
		n += 2
	}
	return n
}

func (m *ClusterAutoscalerStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *GPULimit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Type)
	n += 1 + l + sovGenerated(uint64(l))
	n += 1 + sovGenerated(uint64(m.Min))
	n += 1 + sovGenerated(uint64(m.Max))
	return n
}

func (m *ResourceLimits) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MaxNodesTotal != nil {
		n += 1 + sovGenerated(uint64(*m.MaxNodesTotal))
	}
	if m.Cores != nil {
		l = m.Cores.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.Memory != nil {
		l = m.Memory.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if len(m.GPUS) > 0 {
		for _, e := range m.GPUS {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *ResourceRange) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovGenerated(uint64(m.Min))
	n += 1 + sovGenerated(uint64(m.Max))
	return n
}

func (m *ScaleDownConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	if m.DelayAfterAdd != nil {
		l = len(*m.DelayAfterAdd)
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.DelayAfterDelete != nil {
		l = len(*m.DelayAfterDelete)
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.DelayAfterFailure != nil {
		l = len(*m.DelayAfterFailure)
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.UnneededTime != nil {
		l = len(*m.UnneededTime)
		n += 1 + l + sovGenerated(uint64(l))
	}
	return n
}

func sovGenerated(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGenerated(x uint64) (n int) {
	return sovGenerated(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *ClusterAutoscaler) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ClusterAutoscaler{`,
		`ObjectMeta:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ObjectMeta), "ObjectMeta", "v1.ObjectMeta", 1), `&`, ``, 1) + `,`,
		`Spec:` + strings.Replace(strings.Replace(this.Spec.String(), "ClusterAutoscalerSpec", "ClusterAutoscalerSpec", 1), `&`, ``, 1) + `,`,
		`Status:` + strings.Replace(strings.Replace(this.Status.String(), "ClusterAutoscalerStatus", "ClusterAutoscalerStatus", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterAutoscalerList) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForItems := "[]ClusterAutoscaler{"
	for _, f := range this.Items {
		repeatedStringForItems += strings.Replace(strings.Replace(f.String(), "ClusterAutoscaler", "ClusterAutoscaler", 1), `&`, ``, 1) + ","
	}
	repeatedStringForItems += "}"
	s := strings.Join([]string{`&ClusterAutoscalerList{`,
		`ListMeta:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ListMeta), "ListMeta", "v1.ListMeta", 1), `&`, ``, 1) + `,`,
		`Items:` + repeatedStringForItems + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterAutoscalerSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ClusterAutoscalerSpec{`,
		`ResourceLimits:` + strings.Replace(this.ResourceLimits.String(), "ResourceLimits", "ResourceLimits", 1) + `,`,
		`ScaleDown:` + strings.Replace(this.ScaleDown.String(), "ScaleDownConfig", "ScaleDownConfig", 1) + `,`,
		`MaxPodGracePeriod:` + valueToStringGenerated(this.MaxPodGracePeriod) + `,`,
		`PodPriorityThreshold:` + valueToStringGenerated(this.PodPriorityThreshold) + `,`,
		`BalanceSimilarNodeGroups:` + valueToStringGenerated(this.BalanceSimilarNodeGroups) + `,`,
		`IgnoreDaemonsetsUtilization:` + valueToStringGenerated(this.IgnoreDaemonsetsUtilization) + `,`,
		`SkipNodesWithLocalStorage:` + valueToStringGenerated(this.SkipNodesWithLocalStorage) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ClusterAutoscalerStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ClusterAutoscalerStatus{`,
		`}`,
	}, "")
	return s
}
func (this *GPULimit) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GPULimit{`,
		`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
		`Min:` + fmt.Sprintf("%v", this.Min) + `,`,
		`Max:` + fmt.Sprintf("%v", this.Max) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ResourceLimits) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForGPUS := "[]GPULimit{"
	for _, f := range this.GPUS {
		repeatedStringForGPUS += strings.Replace(strings.Replace(f.String(), "GPULimit", "GPULimit", 1), `&`, ``, 1) + ","
	}
	repeatedStringForGPUS += "}"
	s := strings.Join([]string{`&ResourceLimits{`,
		`MaxNodesTotal:` + valueToStringGenerated(this.MaxNodesTotal) + `,`,
		`Cores:` + strings.Replace(this.Cores.String(), "ResourceRange", "ResourceRange", 1) + `,`,
		`Memory:` + strings.Replace(this.Memory.String(), "ResourceRange", "ResourceRange", 1) + `,`,
		`GPUS:` + repeatedStringForGPUS + `,`,
		`}`,
	}, "")
	return s
}
func (this *ResourceRange) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ResourceRange{`,
		`Min:` + fmt.Sprintf("%v", this.Min) + `,`,
		`Max:` + fmt.Sprintf("%v", this.Max) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ScaleDownConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ScaleDownConfig{`,
		`Enabled:` + fmt.Sprintf("%v", this.Enabled) + `,`,
		`DelayAfterAdd:` + valueToStringGenerated(this.DelayAfterAdd) + `,`,
		`DelayAfterDelete:` + valueToStringGenerated(this.DelayAfterDelete) + `,`,
		`DelayAfterFailure:` + valueToStringGenerated(this.DelayAfterFailure) + `,`,
		`UnneededTime:` + valueToStringGenerated(this.UnneededTime) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringGenerated(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *ClusterAutoscaler) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterAutoscaler: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterAutoscaler: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ObjectMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Spec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterAutoscalerList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterAutoscalerList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterAutoscalerList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ListMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, ClusterAutoscaler{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterAutoscalerSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterAutoscalerSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterAutoscalerSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceLimits", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ResourceLimits == nil {
				m.ResourceLimits = &ResourceLimits{}
			}
			if err := m.ResourceLimits.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScaleDown", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ScaleDown == nil {
				m.ScaleDown = &ScaleDownConfig{}
			}
			if err := m.ScaleDown.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxPodGracePeriod", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxPodGracePeriod = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PodPriorityThreshold", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PodPriorityThreshold = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BalanceSimilarNodeGroups", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.BalanceSimilarNodeGroups = &b
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IgnoreDaemonsetsUtilization", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IgnoreDaemonsetsUtilization = &b
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkipNodesWithLocalStorage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.SkipNodesWithLocalStorage = &b
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterAutoscalerStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterAutoscalerStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterAutoscalerStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GPULimit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GPULimit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GPULimit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Min", wireType)
			}
			m.Min = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Min |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Max", wireType)
			}
			m.Max = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Max |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceLimits) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceLimits: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceLimits: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxNodesTotal", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxNodesTotal = &v
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cores", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Cores == nil {
				m.Cores = &ResourceRange{}
			}
			if err := m.Cores.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Memory", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Memory == nil {
				m.Memory = &ResourceRange{}
			}
			if err := m.Memory.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GPUS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GPUS = append(m.GPUS, GPULimit{})
			if err := m.GPUS[len(m.GPUS)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceRange) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceRange: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceRange: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Min", wireType)
			}
			m.Min = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Min |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Max", wireType)
			}
			m.Max = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Max |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ScaleDownConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ScaleDownConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ScaleDownConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enabled = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelayAfterAdd", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DelayAfterAdd = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelayAfterDelete", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DelayAfterDelete = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelayAfterFailure", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DelayAfterFailure = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnneededTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.UnneededTime = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGenerated(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenerated
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthGenerated
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowGenerated
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipGenerated(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthGenerated
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthGenerated = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenerated   = fmt.Errorf("proto: integer overflow")
)
