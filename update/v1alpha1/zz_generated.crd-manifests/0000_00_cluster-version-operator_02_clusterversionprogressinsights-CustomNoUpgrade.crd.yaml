apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.openshift.io: https://github.com/openshift/api/pull/2012
    api.openshift.io/merged-by-featuregates: "true"
    description: Provides summary information about an ongoing cluster control plane
      update in Standalone clusters.
    displayName: ClusterVersionProgressInsights
    include.release.openshift.io/ibm-cloud-managed: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    release.openshift.io/feature-set: CustomNoUpgrade
  name: clusterversionprogressinsights.update.openshift.io
spec:
  group: update.openshift.io
  names:
    kind: ClusterVersionProgressInsight
    listKind: ClusterVersionProgressInsightList
    plural: clusterversionprogressinsights
    singular: clusterversionprogressinsight
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ClusterVersionProgressInsight provides summary information about an ongoing cluster control plane update in Standalone clusters

          Compatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              spec is empty for now, ClusterVersionProgressInsight is purely status-reporting API. In the future spec may be used to hold
              configuration to drive what information is surfaced and how
            type: object
          status:
            description: status exposes the health and status of the ongoing cluster
              update
            properties:
              assessment:
                description: |-
                  assessment is a brief summary assessment of the control plane update process. This value is human-oriented, and
                  while it looks like a state/phase enum, it is not meant to be used as such. Assessment is meant as human-oriented
                  brief summary matching the state expressed in conditions (taking into account various relations between them, like
                  ordering or precedence), intended to be directly used in UIs and reports. For machine-oriented conditional behavior
                  depending on the state, the conditions should be used instead.

                  The known values are: Unknown, Progressing, Completed, Degraded. The API is not restricted to these values, and
                  valid values can be even brief phrases, up to 64 characters long.
                maxLength: 64
                minLength: 1
                type: string
              completedAt:
                description: completedAt is the time when the update completed. This
                  field is only set when the update is completed.
                format: date-time
                type: string
              completionPercent:
                description: |-
                  completionPercent conveys the update completion (0-100). When there is no update in progress, the ClusterVersion
                  Progress Insight represents the last update (or installation, which is considered to be an update to the initial
                  version) that is by definition completed, and therefore the completionPercent is 100.
                format: int32
                maximum: 100
                minimum: 0
                type: integer
              conditions:
                description: |-
                  conditions provides detailed observed conditions about ClusterVersion. It contains at most 10 items.
                  Known conditions are:
                  - Updating: whether the control plane (represented by this ClusterVersion) is updating
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 5
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              estimatedCompletedAt:
                description: |-
                  estimatedCompletedAt is the estimated time when the update will complete, if such estimate is available. When there
                  is no update in progress, this field is either not set at all, or its value is the time when the last update was
                  expected to complete.
                format: date-time
                type: string
              name:
                description: name is equal to the name of the corresponding clusterversions.config.openshift.io
                  resource, typically 'version'
                maxLength: 64
                minLength: 1
                pattern: ^[a-z0-9-]+$
                type: string
              startedAt:
                description: |-
                  startedAt is the time when the update started. When there is no update in progress, the Cluster Version
                  Progress Insight represents the last update (or installation, which is considered to be an update to the initial version)
                  that is by definition completed, and this field represents the time when that update was initiated.
                format: date-time
                type: string
              versions:
                description: |-
                  versions contains the original and target versions involved in the update, either the ongoing one or the last update
                  completed.
                properties:
                  previous:
                    description: |-
                      previous is the desired version of the control plane the before the update, regardless of completion. When empty,
                      it means the cluster was never updated yet, and the target version is the initial version of the cluster. When the
                      current update was triggered in the state where the previous update was not fully completed, the version will carry
                      'Partial' metadata.
                    properties:
                      metadata:
                        description: |-
                          metadata is a list of metadata associated with the version. It is a list of key-value pairs. The value is optional
                          and when not provided, the metadata item has boolean semantics (presence indicates true). For example, 'Partial'
                          metadata on a previous version indicates that the previous update was never fully completed. Can contain at most 5 items.
                        items:
                          description: |-
                            VersionMetadata is a key:value item assigned to version involved in the update. Value can be empty, then the metadata
                            have boolean semantics (true when present, false when absent)
                          properties:
                            key:
                              description: |-
                                key is the name of this metadata value. Valid values are:
                                  Installation (boolean): indicates the target version is also initial version of the cluster
                                  Partial (boolean): indicates the previous update was not fully completed
                                  Architecture: a string that indicates the architecture of the payload image of the version involved in the upgrade, present only when relevant
                              enum:
                              - Installation
                              - Partial
                              - Architecture
                              type: string
                            value:
                              description: |-
                                value is the value for the metadata, at most 32 characters long. It is not expected to be provided for Installation
                                and Partial metadata. For Architecture metadata, it is expected to be a string that indicates the architecture of the
                                payload image of the version involved in the upgrade, when relevant.
                              maxLength: 32
                              type: string
                          required:
                          - key
                          type: object
                        maxItems: 2
                        type: array
                        x-kubernetes-list-map-keys:
                        - key
                        x-kubernetes-list-type: map
                      version:
                        description: version is a semantic version string
                        maxLength: 64
                        minLength: 5
                        pattern: ^(?:0|[1-9]\d*)[.](?:0|[1-9]\d*)[.](?:0|[1-9]\d*)(?:-(?:(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:[.](?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?$
                        type: string
                    type: object
                    x-kubernetes-validations:
                    - message: previous version cannot have 'Installation' metadata
                      rule: '!has(self.metadata) || !self.metadata.exists(m, m.key
                        == ''Installation'')'
                  target:
                    description: |-
                      target is the version of the control plane after the update. If the cluster was never updated, the version will carry
                      'Installation' metadata.
                    properties:
                      metadata:
                        description: |-
                          metadata is a list of metadata associated with the version. It is a list of key-value pairs. The value is optional
                          and when not provided, the metadata item has boolean semantics (presence indicates true). For example, 'Partial'
                          metadata on a previous version indicates that the previous update was never fully completed. Can contain at most 5 items.
                        items:
                          description: |-
                            VersionMetadata is a key:value item assigned to version involved in the update. Value can be empty, then the metadata
                            have boolean semantics (true when present, false when absent)
                          properties:
                            key:
                              description: |-
                                key is the name of this metadata value. Valid values are:
                                  Installation (boolean): indicates the target version is also initial version of the cluster
                                  Partial (boolean): indicates the previous update was not fully completed
                                  Architecture: a string that indicates the architecture of the payload image of the version involved in the upgrade, present only when relevant
                              enum:
                              - Installation
                              - Partial
                              - Architecture
                              type: string
                            value:
                              description: |-
                                value is the value for the metadata, at most 32 characters long. It is not expected to be provided for Installation
                                and Partial metadata. For Architecture metadata, it is expected to be a string that indicates the architecture of the
                                payload image of the version involved in the upgrade, when relevant.
                              maxLength: 32
                              type: string
                          required:
                          - key
                          type: object
                        maxItems: 2
                        type: array
                        x-kubernetes-list-map-keys:
                        - key
                        x-kubernetes-list-type: map
                      version:
                        description: version is a semantic version string
                        maxLength: 64
                        minLength: 5
                        pattern: ^(?:0|[1-9]\d*)[.](?:0|[1-9]\d*)[.](?:0|[1-9]\d*)(?:-(?:(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:[.](?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?$
                        type: string
                    type: object
                    x-kubernetes-validations:
                    - message: Target version must be set and not empty
                      rule: has(self.version) && size(self.version) > 0
                    - message: target version cannot have 'Partial' metadata
                      rule: '!has(self.metadata) || !self.metadata.exists(m, m.key
                        == ''Partial'')'
                required:
                - target
                type: object
                x-kubernetes-validations:
                - message: target version must have 'Installation' metadata when previous
                    version is empty
                  rule: has(self.previous) || (has(self.target.metadata) && self.target.metadata.exists(m,
                    m.key == 'Installation'))
                - message: target version can only have 'Installation' metadata when
                    previous version is empty
                  rule: '!(has(self.previous) && has(self.target.metadata) && self.target.metadata.exists(m,
                    m.key == ''Installation''))'
            required:
            - assessment
            - completionPercent
            - name
            - startedAt
            - versions
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: When status is present, .status must match .metadata.name
          rule: '!has(self.status) || self.status.name == self.metadata.name'
    served: true
    storage: true
    subresources:
      status: {}
