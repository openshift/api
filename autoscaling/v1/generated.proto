
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package github.com.openshift.api.autoscaling.v1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1";

// ClusterAutoscaler provides a means to configure the cluster-autoscaler.
//
// +kubebuilder:subresource:status
message ClusterAutoscaler {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Desired state of ClusterAutoscaler resource
  optional ClusterAutoscalerSpec spec = 2;

  // Most recently observed status of ClusterAutoscaler resource
  optional ClusterAutoscalerStatus status = 3;
}

// ClusterAutoscalerList contains a list of ClusterAutoscaler resources.
message ClusterAutoscalerList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ClusterAutoscaler items = 2;
}

// ClusterAutoscalerSpec represents the desired state of a ClusterAutoscaler.
message ClusterAutoscalerSpec {
  // Constraints of autoscaling resources.
  optional ResourceLimits resourceLimits = 1;

  // Configuration of scale down operation.
  optional ScaleDownConfig scaleDown = 2;

  // Gives pods graceful termination time before scaling down.
  optional int32 maxPodGracePeriod = 3;

  // To allow users to schedule "best-effort" pods, which shouldn't trigger
  // Cluster Autoscaler actions, but only run when there are spare resources available,
  // More info: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#how-does-cluster-autoscaler-work-with-pod-priority-and-preemption
  optional int32 podPriorityThreshold = 4;

  // BalanceSimilarNodeGroups enables/disables the
  // `--balance-similar-node-groups` cluster-autocaler feature.
  // This feature will automatically identify node groups with
  // the same instance type and the same set of labels and try
  // to keep the respective sizes of those node groups balanced.
  optional bool balanceSimilarNodeGroups = 5;

  // Enables/Disables `--ignore-daemonsets-utilization` CA feature flag. Should CA ignore DaemonSet pods when calculating resource utilization for scaling down. false by default
  optional bool ignoreDaemonsetsUtilization = 6;

  // Enables/Disables `--skip-nodes-with-local-storage` CA feature flag. If true cluster autoscaler will never delete nodes with pods with local storage, e.g. EmptyDir or HostPath. true by default at autoscaler
  optional bool skipNodesWithLocalStorage = 7;
}

// ClusterAutoscalerStatus defines the observed state of the cluster-autoscaler.
message ClusterAutoscalerStatus {
}

// GPULimit represents limits on the number of GPU devices in the cluster.
message GPULimit {
  // +kubebuilder:validation:MinLength=1
  optional string type = 1;

  // +kubebuilder:validation:Minimum=0
  optional int32 min = 2;

  // +kubebuilder:validation:Minimum=1
  optional int32 max = 3;
}

// ResourceLimits represents global resource limits the cluster-autoscaler
// should not allow to be exceeded.
message ResourceLimits {
  // Maximum number of nodes in all node groups.
  // Cluster autoscaler will not grow the cluster beyond this number.
  // +kubebuilder:validation:Minimum=0
  optional int32 maxNodesTotal = 1;

  // Minimum and maximum number of cores in cluster, in the format <min>:<max>.
  // Cluster autoscaler will not scale the cluster beyond these numbers.
  optional ResourceRange cores = 2;

  // Minimum and maximum number of gigabytes of memory in cluster, in the format <min>:<max>.
  // Cluster autoscaler will not scale the cluster beyond these numbers.
  optional ResourceRange memory = 3;

  // Minimum and maximum number of different GPUs in cluster, in the format <gpu_type>:<min>:<max>.
  // Cluster autoscaler will not scale the cluster beyond these numbers. Can be passed multiple times.
  repeated GPULimit gpus = 4;
}

// ResourceRange represents a min and max range for a resource.
message ResourceRange {
  // +kubebuilder:validation:Minimum=0
  optional int32 min = 1;

  optional int32 max = 2;
}

// ScaleDownConfig represents the cluster-autoscaler configuration related to
// scaling down operations.
message ScaleDownConfig {
  // Should CA scale down the cluster
  optional bool enabled = 1;

  // How long after scale up that scale down evaluation resumes
  // +kubebuilder:validation:Pattern=([0-9]*(\.[0-9]*)?[a-z]+)+
  optional string delayAfterAdd = 2;

  // How long after node deletion that scale down evaluation resumes, defaults to scan-interval
  // +kubebuilder:validation:Pattern=([0-9]*(\.[0-9]*)?[a-z]+)+
  optional string delayAfterDelete = 3;

  // How long after scale down failure that scale down evaluation resumes
  // +kubebuilder:validation:Pattern=([0-9]*(\.[0-9]*)?[a-z]+)+
  optional string delayAfterFailure = 4;

  // How long a node should be unneeded before it is eligible for scale down
  // +kubebuilder:validation:Pattern=([0-9]*(\.[0-9]*)?[a-z]+)+
  optional string unneededTime = 5;
}

