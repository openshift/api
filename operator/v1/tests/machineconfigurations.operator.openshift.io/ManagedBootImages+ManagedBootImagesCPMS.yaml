apiVersion: apiextensions.k8s.io/v1 # Hack because controller-gen complains if we don't have this
name: "MachineConfiguration"
crdName: machineconfigurations.operator.openshift.io
featureGates:
- ManagedBootImages
- ManagedBootImagesCPMS
tests:
  onCreate:
    - name: Should be able to create a minimal MachineConfiguration
      initial: |
        apiVersion: operator.openshift.io/v1
        kind: MachineConfiguration
        spec: {} # No spec is required for a MachineConfiguration
      expected: |
        apiVersion: operator.openshift.io/v1
        kind: MachineConfiguration
        spec:
          logLevel: Normal
          operatorLogLevel: Normal
    - name: Should be able to create an empty ManagedBootImages configuration knob
      initial: |
        apiVersion: operator.openshift.io/v1
        kind: MachineConfiguration
        spec:
          managedBootImages:
            machineManagers: []
      expected: |
        apiVersion: operator.openshift.io/v1
        kind: MachineConfiguration
        spec:
          logLevel: Normal
          operatorLogLevel: Normal
          managedBootImages:
            machineManagers: []
    - name: Should be able to create a ManagedBootImages configuration knob that opts in all ControlPlaneMachineSets
      initial: |
        apiVersion: operator.openshift.io/v1
        kind: MachineConfiguration
        spec:
          managedBootImages:
            machineManagers:
              - resource: controlplanemachinesets
                apiGroup: machine.openshift.io
                selection:
                  mode: All
      expected: |
        apiVersion: operator.openshift.io/v1
        kind: MachineConfiguration
        spec:
          logLevel: Normal
          operatorLogLevel: Normal
          managedBootImages:
            machineManagers:
              - resource: controlplanemachinesets
                apiGroup: machine.openshift.io
                selection:
                  mode: All
    - name: Should be able to create a ManagedBootImages configuration knob that opts in no ControlPlaneMachineSets
      initial: |
        apiVersion: operator.openshift.io/v1
        kind: MachineConfiguration
        spec:
          managedBootImages:
            machineManagers:
              - resource: controlplanemachinesets
                apiGroup: machine.openshift.io
                selection:
                  mode: None
      expected: |
        apiVersion: operator.openshift.io/v1
        kind: MachineConfiguration
        spec:
          logLevel: Normal
          operatorLogLevel: Normal
          managedBootImages:
            machineManagers:
              - resource: controlplanemachinesets
                apiGroup: machine.openshift.io
                selection:
                  mode: None                  
    - name: Should not be able to create a ManagedBootImages configuration knob that opts in ControlPlaneMachineSets in partial mode
      initial: |
        apiVersion: operator.openshift.io/v1
        kind: MachineConfiguration
        spec:
          managedBootImages:
            machineManagers:
              - resource: controlplanemachinesets
                apiGroup: machine.openshift.io                     
                selection:
                  mode: Partial
                  partial:
                    machineResourceSelector:
                      matchLabels: {}
      expectedError: "Only All or None selection mode is permitted for ControlPlaneMachineSets"
    - name: Only one unique pair of resource/apigroup is allowed in machineManagers
      initial: |
        apiVersion: operator.openshift.io/v1
        kind: MachineConfiguration
        spec:
          managedBootImages:
            machineManagers:
              - resource: controlplanemachinesets
                apiGroup: machine.openshift.io
                selection:
                  mode: None
              - resource: controlplanemachinesets
                apiGroup: machine.openshift.io
                selection:
                  mode: All
      expectedError: "spec.managedBootImages.machineManagers[1]: Duplicate value: map[string]interface {}{\"apiGroup\":\"machine.openshift.io\", \"resource\":\"controlplanemachinesets\"}"
