package v1

// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-swagger-docs.sh

// AUTO-GENERATED FUNCTIONS START HERE
var map_ClusterAutoscaler = map[string]string{
	"":       "ClusterAutoscaler provides a means to configure the cluster-autoscaler.",
	"spec":   "Desired state of ClusterAutoscaler resource",
	"status": "Most recently observed status of ClusterAutoscaler resource",
}

func (ClusterAutoscaler) SwaggerDoc() map[string]string {
	return map_ClusterAutoscaler
}

var map_ClusterAutoscalerList = map[string]string{
	"": "ClusterAutoscalerList contains a list of ClusterAutoscaler resources.",
}

func (ClusterAutoscalerList) SwaggerDoc() map[string]string {
	return map_ClusterAutoscalerList
}

var map_ClusterAutoscalerSpec = map[string]string{
	"":                            "ClusterAutoscalerSpec represents the desired state of a ClusterAutoscaler.",
	"resourceLimits":              "Constraints of autoscaling resources.",
	"scaleDown":                   "Configuration of scale down operation.",
	"maxPodGracePeriod":           "Gives pods graceful termination time before scaling down.",
	"podPriorityThreshold":        "To allow users to schedule \"best-effort\" pods, which shouldn't trigger Cluster Autoscaler actions, but only run when there are spare resources available, More info: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#how-does-cluster-autoscaler-work-with-pod-priority-and-preemption",
	"balanceSimilarNodeGroups":    "BalanceSimilarNodeGroups enables/disables the `--balance-similar-node-groups` cluster-autocaler feature. This feature will automatically identify node groups with the same instance type and the same set of labels and try to keep the respective sizes of those node groups balanced.",
	"ignoreDaemonsetsUtilization": "Enables/Disables `--ignore-daemonsets-utilization` CA feature flag. Should CA ignore DaemonSet pods when calculating resource utilization for scaling down. false by default",
	"skipNodesWithLocalStorage":   "Enables/Disables `--skip-nodes-with-local-storage` CA feature flag. If true cluster autoscaler will never delete nodes with pods with local storage, e.g. EmptyDir or HostPath. true by default at autoscaler",
}

func (ClusterAutoscalerSpec) SwaggerDoc() map[string]string {
	return map_ClusterAutoscalerSpec
}

var map_ClusterAutoscalerStatus = map[string]string{
	"": "ClusterAutoscalerStatus defines the observed state of the cluster-autoscaler.",
}

func (ClusterAutoscalerStatus) SwaggerDoc() map[string]string {
	return map_ClusterAutoscalerStatus
}

var map_GPULimit = map[string]string{
	"": "GPULimit represents limits on the number of GPU devices in the cluster.",
}

func (GPULimit) SwaggerDoc() map[string]string {
	return map_GPULimit
}

var map_ResourceLimits = map[string]string{
	"":              "ResourceLimits represents global resource limits the cluster-autoscaler should not allow to be exceeded.",
	"maxNodesTotal": "Maximum number of nodes in all node groups. Cluster autoscaler will not grow the cluster beyond this number.",
	"cores":         "Minimum and maximum number of cores in cluster, in the format <min>:<max>. Cluster autoscaler will not scale the cluster beyond these numbers.",
	"memory":        "Minimum and maximum number of gigabytes of memory in cluster, in the format <min>:<max>. Cluster autoscaler will not scale the cluster beyond these numbers.",
	"gpus":          "Minimum and maximum number of different GPUs in cluster, in the format <gpu_type>:<min>:<max>. Cluster autoscaler will not scale the cluster beyond these numbers. Can be passed multiple times.",
}

func (ResourceLimits) SwaggerDoc() map[string]string {
	return map_ResourceLimits
}

var map_ResourceRange = map[string]string{
	"": "ResourceRange represents a min and max range for a resource.",
}

func (ResourceRange) SwaggerDoc() map[string]string {
	return map_ResourceRange
}

var map_ScaleDownConfig = map[string]string{
	"":                  "ScaleDownConfig represents the cluster-autoscaler configuration related to scaling down operations.",
	"enabled":           "Should CA scale down the cluster",
	"delayAfterAdd":     "How long after scale up that scale down evaluation resumes",
	"delayAfterDelete":  "How long after node deletion that scale down evaluation resumes, defaults to scan-interval",
	"delayAfterFailure": "How long after scale down failure that scale down evaluation resumes",
	"unneededTime":      "How long a node should be unneeded before it is eligible for scale down",
}

func (ScaleDownConfig) SwaggerDoc() map[string]string {
	return map_ScaleDownConfig
}

// AUTO-GENERATED FUNCTIONS END HERE
