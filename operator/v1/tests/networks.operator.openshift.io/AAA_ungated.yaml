apiVersion: apiextensions.k8s.io/v1 # Hack because controller-gen complains if we don't have this
name: "Network"
crdName: networks.operator.openshift.io
tests:
  onCreate:
  - name: Should be able to create a minimal Network
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec: {} # No spec is required for a Network
    expected: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        disableNetworkDiagnostics: false
        logLevel: Normal
        operatorLogLevel: Normal
  - name: Should be able to pass a valid IPV4 CIDR to IPV4 internalMasqueradeSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv4:
                internalMasqueradeSubnet: "169.254.168.0/29"
    expected: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              routingViaHost: false
              ipv4:
                internalMasqueradeSubnet: "169.254.168.0/29"
            ipsecConfig:
              mode: Disabled
        disableNetworkDiagnostics: false
        logLevel: Normal
        operatorLogLevel: Normal
  - name: Should not be able to pass CIDR with a subnet larger than /29 to IPV4 internalMasqueradeSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv4:
                internalMasqueradeSubnet: 10.10.10.10/32
    expectedError: "Invalid value: \"string\": subnet must be in the range /0 to /29 inclusive"
  - name: Should not be able to pass CIDR with a subnet smaller than /0 to IPV4 internalMasqueradeSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv4:
                internalMasqueradeSubnet: 10.10.10.10/-1
    expectedError: "Invalid value: \"string\": subnet must be in the range /0 to /29 inclusive"
  - name: Should not be able to add an IP address with the incorrect number of octets to IPV4 internalMasqueradeSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv4:
                internalMasqueradeSubnet: 10.10.10/24
    expectedError: "spec.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipv4.internalMasqueradeSubnet: Invalid value: \"string\": Subnet must be in valid IPV4 CIDR format"
  - name: Should not be able to add an IP address with leading zeros in an octet to IPV4 internalMasqueradeSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv4:
                internalMasqueradeSubnet: 10.10.010.10/24
    expectedError: "spec.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipv4.internalMasqueradeSubnet: Invalid value: \"string\": Subnet must be in valid IPV4 CIDR format"
  - name: Should not be able to add an IP address with with zero for the first octet to internalMasqueradeSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv4:
                internalMasqueradeSubnet: 0.10.10.10/24
    expectedError: "spec.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipv4.internalMasqueradeSubnet: Invalid value: \"string\": first IP address octet must not be 0"
  - name: Should not be able to add an IP address with an octet greater than 255 to IPV4 internalMasqueradeSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv4:
                internalMasqueradeSubnet: 10.10.10.256/24
    expectedError: "spec.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipv4.internalMasqueradeSubnet: Invalid value: \"string\": Subnet must be in valid IPV4 CIDR format"
  - name: Should be able to pass a valid IPV6 CIDR to IPV6 internalMasqueradeSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv6:
                internalMasqueradeSubnet: "abcd:ef01:2345:6789:abcd:ef01:2345:6789/125"
    expected: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv6:
                internalMasqueradeSubnet: "abcd:ef01:2345:6789:abcd:ef01:2345:6789/125"
              routingViaHost: false
            ipsecConfig:
              mode: Disabled
        disableNetworkDiagnostics: false
        logLevel: Normal
        operatorLogLevel: Normal
  - name: Should be able to pass a valid shorthand IPV6 CIDR to IPV6 internalMasqueradeSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv6:
                internalMasqueradeSubnet: "abcd:ef01:2345:6789::2345:6789/20"
    expected: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              routingViaHost: false
              ipv6:
                internalMasqueradeSubnet: "abcd:ef01:2345:6789::2345:6789/20"
            ipsecConfig:
              mode: Disabled
        disableNetworkDiagnostics: false
        logLevel: Normal
        operatorLogLevel: Normal
  - name: Should not be able to pass invalid IPV6 CIDR to IPV6 internalMasqueradeSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv6:
                internalMasqueradeSubnet: "foo"
    expectedError:  "Invalid value: \"string\": subnet must be in the range /0 to /125 inclusive"
  - name: Should not be able to add an IP address with the more than 8 octets to IPV6 internalMasqueradeSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv6:
                internalMasqueradeSubnet: abcd:ef01:2345:6789:abcd:ef01:2345:6789:abcd/125
    expectedError: "spec.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipv6.internalMasqueradeSubnet: Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: Should not be able to add a dual IP address to IPV6 internalMasqueradeSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv6:
                internalMasqueradeSubnet: abcd:ef01:2345:6789:abcd:ef01:2345:1.2.3.4/125
    expectedError: "spec.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipv6.internalMasqueradeSubnet: Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: Should not be able to pass a double elided IPV6 CIDR to IPV6 internalMasqueradeSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv6:
                internalMasqueradeSubnet: "abcd::ef01::2345:6789/20"
    expectedError: "spec.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipv6.internalMasqueradeSubnet: Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: "Should not be able to pass a complete IPV6 CIDR with a :: expander to v6InternalMasqueradeSubnet"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv6:
                internalMasqueradeSubnet: "abcd:ef01:2345:6789::abcd:ef01:2345:6789/125"
    expectedError: "spec.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipv6.internalMasqueradeSubnet: Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: Should not be able to pass a IPV6 CIDR without enough segments to v6InternalMasqueradeSubnet"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv6:
                internalMasqueradeSubnet: "abcd:ef01:2345:6789:abcd:ef01:2345/125"
    expectedError: "spec.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipv6.internalMasqueradeSubnet: Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: "Should not be able to pass an invalid IPV6 CIDR with a segment that contains invalid values"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv6:
                internalMasqueradeSubnet: "xbcd:ef01:2345:6789::2345:6789/20"
    expectedError: "spec.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipv6.internalMasqueradeSubnet: Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: "Should not be able to pass an invalid IPV6 CIDR with a segment that is 5 characters long"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipv6:
                internalMasqueradeSubnet: "abcd:eff01:2345:6789::2345:6789/20"
    expectedError: "spec.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipv6.internalMasqueradeSubnet: Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: "IPsec - Empty ipsecConfig is allowed in initial state"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            ipsecConfig: {}
    expected: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            ipsecConfig: {}
        disableNetworkDiagnostics: false
        logLevel: Normal
        operatorLogLevel: Normal
  - name: "IPsec - Populated ipsecConfig is allowed"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            ipsecConfig:
              mode: Full
    expected: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            ipsecConfig:
              mode: Full
        disableNetworkDiagnostics: false
        logLevel: Normal
        operatorLogLevel: Normal
  - name: "IPsec - Start without setting ipsecConfig"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
    expected: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork: {}
        disableNetworkDiagnostics: false
        logLevel: Normal
        operatorLogLevel: Normal
  - name: "IPsec - empty string is not allowed"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            ipsecConfig:
              mode: ""
    expectedError: "Unsupported value: \"\": supported values: \"Disabled\", \"External\", \"Full\""
  - name: Should be able to pass a valid IPV4 CIDR to IPV4 internalTransitSwitchSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv4:
              internalTransitSwitchSubnet: "169.254.168.0/29"
    expected: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipsecConfig:
              mode: Disabled
            ipv4:
              internalTransitSwitchSubnet: "169.254.168.0/29"
       disableNetworkDiagnostics: false
       logLevel: "Normal"
       operatorLogLevel: "Normal"
  - name: Should not be able to pass CIDR with a subnet larger than /30 to IPV4 internalTransitSwitchSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv4:
              internalTransitSwitchSubnet: "169.254.168.0/-1"
    expectedError: "Invalid value: \"string\": subnet must be in the range /0 to /30 inclusive"
  - name: Should not be able to pass CIDR with a subnet smaller than /0 to IPV4 internalTransitSwitchSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv4:
              internalTransitSwitchSubnet: "169.254.168.0/31"
    expectedError: "Invalid value: \"string\": subnet must be in the range /0 to /30 inclusive"
  - name: Should not be able to add an IP address with the incorrect number of octets to IPV4 internalTransitSwitchSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv4:
              internalTransitSwitchSubnet: "10.10.10/24"
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV4 CIDR format"
  - name: Should not be able to add an IP address with leading zeros in an octet to IPV4 internalTransitSwitchSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv4:
              internalTransitSwitchSubnet: "10.10.010.10/24"
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV4 CIDR format"
  - name: Should not be able to add an IP address with zero for the first octet to IPV4 internalTransitSwitchSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv4:
              internalTransitSwitchSubnet: "0.10.10.10/24"
    expectedError: "spec.defaultNetwork.ovnKubernetesConfig.ipv4.internalTransitSwitchSubnet: Invalid value: \"string\": first IP address octet must not be 0"
  - name: Should not be able to add an IP address with an octet greater than 255 to IPV4 internalTransitSwitchSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv4:
              internalTransitSwitchSubnet: "10.10.256.10/24"
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV4 CIDR format"
  - name: Should be able to pass a valid IPV6 CIDR to IPV6 internalTransitSwitchSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalTransitSwitchSubnet: "abcd:ef01:2345:6789:abcd:ef01:2345:6789/125"
    expected: |
        apiVersion: operator.openshift.io/v1
        kind: Network
        spec:
         defaultNetwork:
            ovnKubernetesConfig:
              ipsecConfig:
                mode: Disabled
              ipv6:
                internalTransitSwitchSubnet: "abcd:ef01:2345:6789:abcd:ef01:2345:6789/125"
         disableNetworkDiagnostics: false
         logLevel: "Normal"
         operatorLogLevel: "Normal"
  - name: Should be able to pass a valid shorthand IPV6 CIDR to IPV6 internalTransitSwitchSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalTransitSwitchSubnet: "abcd:ef01:2345:6789::2345:6789/20"
    expected: |
        apiVersion: operator.openshift.io/v1
        kind: Network
        spec:
         defaultNetwork:
            ovnKubernetesConfig:
              ipsecConfig:
                mode: Disabled
              ipv6:
                internalTransitSwitchSubnet: "abcd:ef01:2345:6789::2345:6789/20"
         disableNetworkDiagnostics: false
         logLevel: "Normal"
         operatorLogLevel: "Normal"
  - name: Should not be able to pass an invalid IPV6 CIDR to IPV6 internalTransitSwitchSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalTransitSwitchSubnet: "foo"
    expectedError: "Invalid value: \"string\": subnet must be in the range /0 to /125 inclusive"
  - name: Should not be able to add an IP address with more than 8 octets to IPV6 internalTransitSwitchSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalTransitSwitchSubnet: abcd:ef01:2345:6789:abcd:ef01:2345:6789:abcd/125
    expectedError: "spec.defaultNetwork.ovnKubernetesConfig.ipv6.internalTransitSwitchSubnet: Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: Should not be able to add a dual IP address to IPV6 internalTransitSwitchSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalTransitSwitchSubnet:  abcd:ef01:2345:6789:abcd:ef01:2345:1.2.3.4/125
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: Should be able to pass a double elided IPV6 CIDR to IPV6 internalTransitSwitchSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalTransitSwitchSubnet: "abcd::ef01::2345:6789/20"
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: Should not be able to pass a complete IPV6 CIDR with a '::' expander to internalTransitSwitchSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalTransitSwitchSubnet: "abcd:ef01:2345:6789::abcd:ef01:2345:6789/125"
    expectedError: "spec.defaultNetwork.ovnKubernetesConfig.ipv6.internalTransitSwitchSubnet: Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: Should not be able to pass an invalid IPV6 CIDR with a segment that contains invalid values to IPV6 internalTransitSwitchSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalTransitSwitchSubnet: "xbcd:ef01:2345:6789::2345:6789/20"
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: Should not be able to pass an invalid IPV6 CIDR with a segment that is 5 characters long
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalTransitSwitchSubnet: "abcd:eff01:2345:6789::2345:6789/20"
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: Should be able to pass a valid IPV4 CIDR to IPV4 internalJoinSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv4:
              internalJoinSubnet: "169.254.168.0/29"
    expected: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipsecConfig:
              mode: Disabled
            ipv4:
              internalJoinSubnet: "169.254.168.0/29"
       disableNetworkDiagnostics: false
       logLevel: "Normal"
       operatorLogLevel: "Normal"
  - name: Should not be able to pass CIDR with a subnet larger than /30 to IPV4 internalJoinSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv4:
              internalJoinSubnet: "169.254.168.0/-1"
    expectedError: "Invalid value: \"string\": subnet must be in the range /0 to /30 inclusive"
  - name: Should not be able to pass CIDR with a subnet smaller than /0 to IPV4 internalJoinSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv4:
              internalJoinSubnet: "169.254.168.0/31"
    expectedError: "Invalid value: \"string\": subnet must be in the range /0 to /30 inclusive"
  - name: Should not be able to add an IP address with the incorrect number of octets to IPV4 internalJoinSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv4:
              internalJoinSubnet: "10.10.10/24"
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV4 CIDR format"
  - name: Should not be able to add an IP address with leading zeros in an octet to IPV4 internalJoinSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv4:
              internalJoinSubnet: "10.10.010.10/24"
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV4 CIDR format"
  - name: Should not be able to add an IP address with zero for the first octet to IPV4 internalJoinSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv4:
              internalJoinSubnet: "0.10.10.10/24"
    expectedError: "spec.defaultNetwork.ovnKubernetesConfig.ipv4.internalJoinSubnet: Invalid value: \"string\": first IP address octet must not be 0"
  - name: Should not be able to add an IP address with an octet greater than 255 to IPV4 internalJoinSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv4:
              internalJoinSubnet: "10.10.256.10/24"
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV4 CIDR format"
  - name: Should be able to pass a valid IPV6 CIDR to IPV6 internalJoinSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalJoinSubnet: "abcd:ef01:2345:6789:abcd:ef01:2345:6789/125"
    expected: |
        apiVersion: operator.openshift.io/v1
        kind: Network
        spec:
         defaultNetwork:
            ovnKubernetesConfig:
              ipsecConfig:
                mode: Disabled
              ipv6:
                internalJoinSubnet: "abcd:ef01:2345:6789:abcd:ef01:2345:6789/125"
         disableNetworkDiagnostics: false
         logLevel: "Normal"
         operatorLogLevel: "Normal"
  - name: Should be able to pass a valid shorthand IPV6 CIDR to IPV6 internalJoinSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalJoinSubnet: "abcd:ef01:2345:6789::2345:6789/20"
    expected: |
        apiVersion: operator.openshift.io/v1
        kind: Network
        spec:
         defaultNetwork:
            ovnKubernetesConfig:
              ipsecConfig:
                mode: Disabled
              ipv6:
                internalJoinSubnet: "abcd:ef01:2345:6789::2345:6789/20"
         disableNetworkDiagnostics: false
         logLevel: "Normal"
         operatorLogLevel: "Normal"
  - name: Should not be able to pass an invalid IPV6 CIDR to IPV6 internalJoinSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalJoinSubnet: "foo"
    expectedError: "Invalid value: \"string\": subnet must be in the range /0 to /125 inclusive"
  - name: Should not be able to add an IP address with more than 8 octets to IPV6 internalJoinSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalJoinSubnet: abcd:ef01:2345:6789:abcd:ef01:2345:6789:abcd/125
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: Should not be able to add a dual IP address to IPV6 internalJoinSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalJoinSubnet:  abcd:ef01:2345:6789:abcd:ef01:2345:1.2.3.4/125
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: Should be able to pass a double elided IPV6 CIDR to IPV6 internalJoinSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalJoinSubnet: "abcd::ef01::2345:6789/20"
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: Should not be able to pass a complete IPV6 CIDR with a '::' expander to internalJoinSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalJoinSubnet: "abcd:ef01:2345:6789::abcd:ef01:2345:6789/125"
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: Should not be able to pass an invalid IPV6 CIDR with a segment that contains invalid values to IPV6 internalJoinSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalJoinSubnet: "xbcd:ef01:2345:6789::2345:6789/20"
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: Should not be able to pass an invalid IPV6 CIDR with a segment that is 5 characters long
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            ipv6:
              internalJoinSubnet: "abcd:eff01:2345:6789::2345:6789/20"
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
  - name: Should not be able to pass an IPV4 CIDR to IPV6 internalJoinSubnet
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
        ovnKubernetesConfig:
         ipv6:
          internalJoinSubnet: 1.1.1.1/24
    expectedError: "Invalid value: \"string\": Subnet must be in valid IPV6 CIDR format"
   # Due to a limitation with current K8s capabilities, we have to implement custom ratcheting validation with
  # XValidation rules. However, when oldSelf is not present, our rule will not be evaluated. Given that our
  # rule is applied to the spec:, if the resource is not present, the rule will not be evaluated at all due to the
  # absence of oldSelf.
  # Therefore, it *is* possible to create a Network CR with an invalid configuration, albeit in practice, the
  # Network CR would already exist unless admins explicitly delete and recreate it.
  - name: "Should be able to pass an invalid ipForwarding value on create due to limitations with xValidation (FIXME)"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipForwarding: "invalid"
    expected: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipForwarding: "invalid"
              routingViaHost: false
            ipsecConfig:
              mode: Disabled
       disableNetworkDiagnostics: false
       logLevel: "Normal"
       operatorLogLevel: "Normal"
  - name: "Should be able to pass a valid ipForwarding value on create"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipForwarding: "Global"
    expected: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipForwarding: "Global"
              routingViaHost: false
            ipsecConfig:
              mode: Disabled
       disableNetworkDiagnostics: false
       logLevel: "Normal"
       operatorLogLevel: "Normal"
  onUpdate:
  - name: "IPsec - Removing ipsecConfig.mode is not allowed"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            ipsecConfig:
              mode: Full
    updated: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            ipsecConfig: {}
    expectedError: "ipsecConfig.mode is required"
  - name: "IPsec - Disabling IPsec"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            ipsecConfig:
              mode: Full
    updated: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            ipsecConfig:
              mode: Disabled
    expected: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            ipsecConfig:
              mode: Disabled
        disableNetworkDiagnostics: false
        logLevel: Normal
        operatorLogLevel: Normal
  - name: "IPsec - Empty ipsecConfig when changing other parameters"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            ipsecConfig: {}
    updated: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            ipsecConfig: {}
            mtu: 5888
    expected: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
        defaultNetwork:
          ovnKubernetesConfig:
            ipsecConfig: {}
            mtu: 5888
        disableNetworkDiagnostics: false
        logLevel: Normal
        operatorLogLevel: Normal
  - name: "Should not allow an empty spec Network operator to update ipForwarding to an invalid value"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec: {}
    updated: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipForwarding: "invalid"
    expectedError:  "invalid value for IPForwarding, valid values are 'Restricted' or 'Global'"
  - name: "Should not allow network operator to update ipForwarding from a valid to an invalid value"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipForwarding: "Global"
    updated: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipForwarding: "invalid"
    expectedError:  "invalid value for IPForwarding, valid values are 'Restricted' or 'Global'"
  - name: "Should not allow network operator to update ipForwarding from a valid to an empty (invalid) value"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipForwarding: "Global"
    updated: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipForwarding: ""
    expectedError:  "invalid value for IPForwarding, valid values are 'Restricted' or 'Global'"
  - name: "Should allow network operator to update ipForwarding to a valid value"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipForwarding: "Global"
    updated: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipForwarding: "Restricted"
    expected: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipForwarding: "Restricted"
              routingViaHost: false
            ipsecConfig:
              mode: Disabled
       disableNetworkDiagnostics: false
       logLevel: "Normal"
       operatorLogLevel: "Normal"
  - name: "Should allow network operator to keep an old invalid ipForwarding value"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipForwarding: "invalid"
    updated: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipForwarding: "invalid"
       disableNetworkDiagnostics: true
    expected: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipForwarding: "invalid"
              routingViaHost: false
            ipsecConfig:
              mode: Disabled
       disableNetworkDiagnostics: true
       logLevel: "Normal"
       operatorLogLevel: "Normal"
  - name: "Should allow network operator to remove ipForwarding value"
    initial: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              ipForwarding: "Global"
    updated: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig: {}
    expected: |
      apiVersion: operator.openshift.io/v1
      kind: Network
      spec:
       defaultNetwork:
          ovnKubernetesConfig:
            gatewayConfig:
              routingViaHost: false
            ipsecConfig:
              mode: Disabled
       disableNetworkDiagnostics: false
       logLevel: "Normal"
       operatorLogLevel: "Normal"
