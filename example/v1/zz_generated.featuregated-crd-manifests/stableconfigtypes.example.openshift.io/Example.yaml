apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.openshift.io: https://github.com/openshift/api/pull/xxx
    api.openshift.io/filename-cvo-runlevel: "0000_50"
    api.openshift.io/filename-operator: my-operator
    api.openshift.io/filename-ordering: "01"
    feature-gate.release.openshift.io/Example: "true"
  name: stableconfigtypes.example.openshift.io
spec:
  group: example.openshift.io
  names:
    kind: StableConfigType
    listKind: StableConfigTypeList
    plural: stableconfigtypes
    singular: stableconfigtype
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: |-
          StableConfigType is a stable config type that may include TechPreviewNoUpgrade fields.

          Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec is the specification of the desired behavior of the
              StableConfigType.
            properties:
              celUnion:
                description: celUnion demonstrates how to validate a discrminated
                  union using CEL
                properties:
                  optionalMember:
                    description: optionalMember is a union member that is optional.
                    type: string
                  requiredMember:
                    description: requiredMember is a union member that is required.
                    type: string
                  type:
                    description: type determines which of the union members should
                      be populated.
                    enum:
                    - RequiredMember
                    - OptionalMember
                    - EmptyMember
                    type: string
                required:
                - type
                type: object
                x-kubernetes-validations:
                - message: requiredMember is required when type is RequiredMember,
                    and forbidden otherwise
                  rule: 'has(self.type) && self.type == ''RequiredMember'' ?  has(self.requiredMember)
                    : !has(self.requiredMember)'
                - message: optionalMember is forbidden when type is not OptionalMember
                  rule: 'has(self.type) && self.type == ''OptionalMember'' ?  true
                    : !has(self.optionalMember)'
              coolNewField:
                description: coolNewField is a field that is for tech preview only.  On
                  normal clusters this shouldn't be present
                type: string
              evolvingCollection:
                description: |-
                  evolvingCollection demonstrates how to have a collection where the maximum number of items varies on cluster type.
                  For default clusters, this will be "1" but on TechPreview clusters, this value will be "3".
                items:
                  type: string
                maxItems: 3
                type: array
                x-kubernetes-list-type: atomic
              evolvingUnion:
                description: evolvingUnion demonstrates how to phase in new values
                  into discriminated union
                properties:
                  type:
                    description: type is the discriminator. It has different values
                      for Default and for TechPreviewNoUpgrade
                    enum:
                    - ""
                    - StableValue
                    - TechPreviewOnlyValue
                    type: string
                required:
                - type
                type: object
              immutableField:
                description: |-
                  immutableField is a field that is immutable once the object has been created.
                  It is required at all times.
                type: string
                x-kubernetes-validations:
                - message: immutableField is immutable
                  rule: self == oldSelf
              nonZeroDefault:
                default: 8
                description: |-
                  nonZeroDefault is a demonstration of creating an integer field that has a non zero default.
                  It required two default tags (one for CRD generation, one for client generation) and must have `omitempty` and be optional.
                  A minimum value is added to demonstrate that a zero value would not be accepted.
                format: int32
                minimum: 8
                type: integer
              optionalImmutableField:
                description: |-
                  optionalImmutableField is a field that is immutable once set.
                  It is optional but may not be changed once set.
                type: string
                x-kubernetes-validations:
                - message: optionalImmutableField is immutable once set
                  rule: oldSelf == '' || self == oldSelf
              set:
                description: set demonstrates how to define and validate set of strings
                items:
                  description: SetValue defines the types allowed in string set type
                  enum:
                  - Foo
                  - Bar
                  - Baz
                  - Qux
                  - Corge
                  type: string
                maxItems: 5
                type: array
                x-kubernetes-list-type: set
                x-kubernetes-validations:
                - rule: self.all(x,self.exists_one(y,x == y))
              stableField:
                description: |-
                  stableField is a field that is present on default clusters and on tech preview clusters

                  If empty, the platform will choose a good default, which may change over time without notice.
                type: string
              subdomainNameField:
                description: |-
                  subdomainNameField represents a kubenetes name field.
                  The intention is that it validates the name in the same way metadata.Name is validated.
                  That is, it is a DNS-1123 subdomain.
                maxLength: 253
                type: string
                x-kubernetes-validations:
                - message: a lowercase RFC 1123 subdomain must consist of lower case
                    alphanumeric characters, '-' or '.', and must start and end with
                    an alphanumeric character.
                  rule: '!format.dns1123Subdomain().validate(self).hasValue()'
            required:
            - immutableField
            type: object
            x-kubernetes-validations:
            - message: coolNewField may not be removed once set
              rule: 'has(oldSelf.coolNewField) ? has(self.coolNewField) : true'
          status:
            description: status is the most recently observed status of the StableConfigType.
            properties:
              conditions:
                description: |-
                  Represents the observations of a foo's current state.
                  Known .status.conditions.type are: "Available", "Progressing", and "Degraded"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              immutableField:
                description: |-
                  immutableField is a field that is immutable once the object has been created.
                  It is required at all times.
                type: string
                x-kubernetes-validations:
                - message: immutableField is immutable
                  rule: self == oldSelf
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
