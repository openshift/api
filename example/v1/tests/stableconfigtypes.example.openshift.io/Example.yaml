apiVersion: apiextensions.k8s.io/v1 # Hack because controller-gen complains if we don't have this
name: "Example API"
crdName: stableconfigtypes.example.openshift.io
featureGates:
- Example
tests:
  onCreate:
    - name: Should persist stable fields
      initial: |
        apiVersion: example.openshift.io/v1
        kind: StableConfigType
        spec:
          stableField: "Allowed"
          immutableField: foo
      expected: |
        apiVersion: example.openshift.io/v1
        kind: StableConfigType
        spec:
          stableField: "Allowed"
          immutableField: foo
          nonZeroDefault: 8
    - name: Should persist a tech preview field
      initial: |
        apiVersion: example.openshift.io/v1
        kind: StableConfigType
        spec:
          coolNewField: "Invalid"
          immutableField: foo
      expected: |
        apiVersion: example.openshift.io/v1
        kind: StableConfigType
        spec:
          coolNewField: "Invalid"
          immutableField: foo
          nonZeroDefault: 8
    - name: With an EvolvingUnion, Should allow an empty enum value
      initial: |
        apiVersion: example.openshift.io/v1
        kind: StableConfigType
        spec:
          evolvingUnion:
            type: ""
          immutableField: foo
      expected: |
        apiVersion: example.openshift.io/v1
        kind: StableConfigType
        spec:
          evolvingUnion:
            type: ""
          immutableField: foo
          nonZeroDefault: 8
    - name: With an EvolvingUnion, Should allow a Stable enum value
      initial: |
        apiVersion: example.openshift.io/v1
        kind: StableConfigType
        spec:
          evolvingUnion:
            type: StableValue
          immutableField: foo
      expected: |
        apiVersion: example.openshift.io/v1
        kind: StableConfigType
        spec:
          evolvingUnion:
            type: StableValue
          immutableField: foo
          nonZeroDefault: 8
    - name: With an EvolvingUnion, Should allow a TechPreview enum value
      initial: |
        apiVersion: example.openshift.io/v1
        kind: StableConfigType
        spec:
          evolvingUnion:
            type: TechPreviewOnlyValue
          immutableField: foo
      expected: |
        apiVersion: example.openshift.io/v1
        kind: StableConfigType
        spec:
          evolvingUnion:
            type: TechPreviewOnlyValue
          immutableField: foo
          nonZeroDefault: 8
    - name: Should persist a valid DNS 1123 subdomain
      initial: |
        apiVersion: example.openshift.io/v1
        kind: StableConfigType
        spec:
          immutableField: foo
          subdomainNameField: foo.bar-baz.qux
      expected: |
        apiVersion: example.openshift.io/v1
        kind: StableConfigType
        spec:
          immutableField: foo
          subdomainNameField: foo.bar-baz.qux
          nonZeroDefault: 8
    - name: Should not allow an invalid DNS 1123 subdomain
      initial: |
        apiVersion: example.openshift.io/v1
        kind: StableConfigType
        spec:
          immutableField: foo
          subdomainNameField: foo.-bar.baz
      expectedError: "spec.subdomainNameField: Invalid value: \"string\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character."
  onUpdate:
    - name: Should not allow removal of a tech preview field
      initial: |
        apiVersion: example.openshift.io/v1
        kind: StableConfigType
        spec:
          coolNewField: "Invalid"
          immutableField: foo
      updated: |
        apiVersion: example.openshift.io/v1
        kind: StableConfigType
        spec:
          immutableField: foo
      expectedError: "spec: Invalid value: \"object\": coolNewField may not be removed once set"
