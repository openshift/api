// +build !ignore_autogenerated

// This file was autogenerated by deepcopy-gen. Do not edit it manually!

package v1

import (
	core_v1 "k8s.io/api/core/v1"
	meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	reflect "reflect"
)

func init() {
	SchemeBuilder.Register(RegisterDeepCopies)
}

// RegisterDeepCopies adds deep-copy functions to the given scheme. Public
// to allow building arbitrary schemes.
//
// Deprecated: deepcopy registration will go away when static deepcopy is fully implemented.
func RegisterDeepCopies(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedDeepCopyFuncs(
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BinaryBuildRequestOptions).DeepCopyInto(out.(*BinaryBuildRequestOptions))
			return nil
		}, InType: reflect.TypeOf(&BinaryBuildRequestOptions{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BinaryBuildSource).DeepCopyInto(out.(*BinaryBuildSource))
			return nil
		}, InType: reflect.TypeOf(&BinaryBuildSource{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BitbucketWebHookCause).DeepCopyInto(out.(*BitbucketWebHookCause))
			return nil
		}, InType: reflect.TypeOf(&BitbucketWebHookCause{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*Build).DeepCopyInto(out.(*Build))
			return nil
		}, InType: reflect.TypeOf(&Build{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildConfig).DeepCopyInto(out.(*BuildConfig))
			return nil
		}, InType: reflect.TypeOf(&BuildConfig{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildConfigList).DeepCopyInto(out.(*BuildConfigList))
			return nil
		}, InType: reflect.TypeOf(&BuildConfigList{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildConfigSpec).DeepCopyInto(out.(*BuildConfigSpec))
			return nil
		}, InType: reflect.TypeOf(&BuildConfigSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildConfigStatus).DeepCopyInto(out.(*BuildConfigStatus))
			return nil
		}, InType: reflect.TypeOf(&BuildConfigStatus{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildList).DeepCopyInto(out.(*BuildList))
			return nil
		}, InType: reflect.TypeOf(&BuildList{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildLog).DeepCopyInto(out.(*BuildLog))
			return nil
		}, InType: reflect.TypeOf(&BuildLog{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildLogOptions).DeepCopyInto(out.(*BuildLogOptions))
			return nil
		}, InType: reflect.TypeOf(&BuildLogOptions{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildOutput).DeepCopyInto(out.(*BuildOutput))
			return nil
		}, InType: reflect.TypeOf(&BuildOutput{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildPostCommitSpec).DeepCopyInto(out.(*BuildPostCommitSpec))
			return nil
		}, InType: reflect.TypeOf(&BuildPostCommitSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildRequest).DeepCopyInto(out.(*BuildRequest))
			return nil
		}, InType: reflect.TypeOf(&BuildRequest{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildSource).DeepCopyInto(out.(*BuildSource))
			return nil
		}, InType: reflect.TypeOf(&BuildSource{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildSpec).DeepCopyInto(out.(*BuildSpec))
			return nil
		}, InType: reflect.TypeOf(&BuildSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildStatus).DeepCopyInto(out.(*BuildStatus))
			return nil
		}, InType: reflect.TypeOf(&BuildStatus{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildStatusOutput).DeepCopyInto(out.(*BuildStatusOutput))
			return nil
		}, InType: reflect.TypeOf(&BuildStatusOutput{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildStatusOutputTo).DeepCopyInto(out.(*BuildStatusOutputTo))
			return nil
		}, InType: reflect.TypeOf(&BuildStatusOutputTo{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildStrategy).DeepCopyInto(out.(*BuildStrategy))
			return nil
		}, InType: reflect.TypeOf(&BuildStrategy{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildTriggerCause).DeepCopyInto(out.(*BuildTriggerCause))
			return nil
		}, InType: reflect.TypeOf(&BuildTriggerCause{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*BuildTriggerPolicy).DeepCopyInto(out.(*BuildTriggerPolicy))
			return nil
		}, InType: reflect.TypeOf(&BuildTriggerPolicy{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*CommonSpec).DeepCopyInto(out.(*CommonSpec))
			return nil
		}, InType: reflect.TypeOf(&CommonSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*CommonWebHookCause).DeepCopyInto(out.(*CommonWebHookCause))
			return nil
		}, InType: reflect.TypeOf(&CommonWebHookCause{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*CustomBuildStrategy).DeepCopyInto(out.(*CustomBuildStrategy))
			return nil
		}, InType: reflect.TypeOf(&CustomBuildStrategy{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*DockerBuildStrategy).DeepCopyInto(out.(*DockerBuildStrategy))
			return nil
		}, InType: reflect.TypeOf(&DockerBuildStrategy{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*DockerStrategyOptions).DeepCopyInto(out.(*DockerStrategyOptions))
			return nil
		}, InType: reflect.TypeOf(&DockerStrategyOptions{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*GenericWebHookCause).DeepCopyInto(out.(*GenericWebHookCause))
			return nil
		}, InType: reflect.TypeOf(&GenericWebHookCause{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*GenericWebHookEvent).DeepCopyInto(out.(*GenericWebHookEvent))
			return nil
		}, InType: reflect.TypeOf(&GenericWebHookEvent{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*GitBuildSource).DeepCopyInto(out.(*GitBuildSource))
			return nil
		}, InType: reflect.TypeOf(&GitBuildSource{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*GitHubWebHookCause).DeepCopyInto(out.(*GitHubWebHookCause))
			return nil
		}, InType: reflect.TypeOf(&GitHubWebHookCause{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*GitInfo).DeepCopyInto(out.(*GitInfo))
			return nil
		}, InType: reflect.TypeOf(&GitInfo{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*GitLabWebHookCause).DeepCopyInto(out.(*GitLabWebHookCause))
			return nil
		}, InType: reflect.TypeOf(&GitLabWebHookCause{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*GitSourceRevision).DeepCopyInto(out.(*GitSourceRevision))
			return nil
		}, InType: reflect.TypeOf(&GitSourceRevision{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*ImageChangeCause).DeepCopyInto(out.(*ImageChangeCause))
			return nil
		}, InType: reflect.TypeOf(&ImageChangeCause{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*ImageChangeTrigger).DeepCopyInto(out.(*ImageChangeTrigger))
			return nil
		}, InType: reflect.TypeOf(&ImageChangeTrigger{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*ImageLabel).DeepCopyInto(out.(*ImageLabel))
			return nil
		}, InType: reflect.TypeOf(&ImageLabel{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*ImageSource).DeepCopyInto(out.(*ImageSource))
			return nil
		}, InType: reflect.TypeOf(&ImageSource{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*ImageSourcePath).DeepCopyInto(out.(*ImageSourcePath))
			return nil
		}, InType: reflect.TypeOf(&ImageSourcePath{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*JenkinsPipelineBuildStrategy).DeepCopyInto(out.(*JenkinsPipelineBuildStrategy))
			return nil
		}, InType: reflect.TypeOf(&JenkinsPipelineBuildStrategy{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*ProxyConfig).DeepCopyInto(out.(*ProxyConfig))
			return nil
		}, InType: reflect.TypeOf(&ProxyConfig{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*SecretBuildSource).DeepCopyInto(out.(*SecretBuildSource))
			return nil
		}, InType: reflect.TypeOf(&SecretBuildSource{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*SecretSpec).DeepCopyInto(out.(*SecretSpec))
			return nil
		}, InType: reflect.TypeOf(&SecretSpec{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*SourceBuildStrategy).DeepCopyInto(out.(*SourceBuildStrategy))
			return nil
		}, InType: reflect.TypeOf(&SourceBuildStrategy{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*SourceControlUser).DeepCopyInto(out.(*SourceControlUser))
			return nil
		}, InType: reflect.TypeOf(&SourceControlUser{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*SourceRevision).DeepCopyInto(out.(*SourceRevision))
			return nil
		}, InType: reflect.TypeOf(&SourceRevision{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*SourceStrategyOptions).DeepCopyInto(out.(*SourceStrategyOptions))
			return nil
		}, InType: reflect.TypeOf(&SourceStrategyOptions{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*StageInfo).DeepCopyInto(out.(*StageInfo))
			return nil
		}, InType: reflect.TypeOf(&StageInfo{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*StepInfo).DeepCopyInto(out.(*StepInfo))
			return nil
		}, InType: reflect.TypeOf(&StepInfo{})},
		conversion.GeneratedDeepCopyFunc{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*WebHookTrigger).DeepCopyInto(out.(*WebHookTrigger))
			return nil
		}, InType: reflect.TypeOf(&WebHookTrigger{})},
	)
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BinaryBuildRequestOptions) DeepCopyInto(out *BinaryBuildRequestOptions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BinaryBuildRequestOptions.
func (in *BinaryBuildRequestOptions) DeepCopy() *BinaryBuildRequestOptions {
	if in == nil {
		return nil
	}
	out := new(BinaryBuildRequestOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BinaryBuildRequestOptions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BinaryBuildSource) DeepCopyInto(out *BinaryBuildSource) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BinaryBuildSource.
func (in *BinaryBuildSource) DeepCopy() *BinaryBuildSource {
	if in == nil {
		return nil
	}
	out := new(BinaryBuildSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BitbucketWebHookCause) DeepCopyInto(out *BitbucketWebHookCause) {
	*out = *in
	in.CommonWebHookCause.DeepCopyInto(&out.CommonWebHookCause)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BitbucketWebHookCause.
func (in *BitbucketWebHookCause) DeepCopy() *BitbucketWebHookCause {
	if in == nil {
		return nil
	}
	out := new(BitbucketWebHookCause)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Build) DeepCopyInto(out *Build) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Build.
func (in *Build) DeepCopy() *Build {
	if in == nil {
		return nil
	}
	out := new(Build)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Build) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildConfig) DeepCopyInto(out *BuildConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildConfig.
func (in *BuildConfig) DeepCopy() *BuildConfig {
	if in == nil {
		return nil
	}
	out := new(BuildConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BuildConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildConfigList) DeepCopyInto(out *BuildConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BuildConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildConfigList.
func (in *BuildConfigList) DeepCopy() *BuildConfigList {
	if in == nil {
		return nil
	}
	out := new(BuildConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BuildConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildConfigSpec) DeepCopyInto(out *BuildConfigSpec) {
	*out = *in
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = make([]BuildTriggerPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.CommonSpec.DeepCopyInto(&out.CommonSpec)
	if in.SuccessfulBuildsHistoryLimit != nil {
		in, out := &in.SuccessfulBuildsHistoryLimit, &out.SuccessfulBuildsHistoryLimit
		if *in == nil {
			*out = nil
		} else {
			*out = new(int32)
			**out = **in
		}
	}
	if in.FailedBuildsHistoryLimit != nil {
		in, out := &in.FailedBuildsHistoryLimit, &out.FailedBuildsHistoryLimit
		if *in == nil {
			*out = nil
		} else {
			*out = new(int32)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildConfigSpec.
func (in *BuildConfigSpec) DeepCopy() *BuildConfigSpec {
	if in == nil {
		return nil
	}
	out := new(BuildConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildConfigStatus) DeepCopyInto(out *BuildConfigStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildConfigStatus.
func (in *BuildConfigStatus) DeepCopy() *BuildConfigStatus {
	if in == nil {
		return nil
	}
	out := new(BuildConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildList) DeepCopyInto(out *BuildList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Build, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildList.
func (in *BuildList) DeepCopy() *BuildList {
	if in == nil {
		return nil
	}
	out := new(BuildList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BuildList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildLog) DeepCopyInto(out *BuildLog) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildLog.
func (in *BuildLog) DeepCopy() *BuildLog {
	if in == nil {
		return nil
	}
	out := new(BuildLog)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BuildLog) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildLogOptions) DeepCopyInto(out *BuildLogOptions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	if in.SinceSeconds != nil {
		in, out := &in.SinceSeconds, &out.SinceSeconds
		if *in == nil {
			*out = nil
		} else {
			*out = new(int64)
			**out = **in
		}
	}
	if in.SinceTime != nil {
		in, out := &in.SinceTime, &out.SinceTime
		if *in == nil {
			*out = nil
		} else {
			*out = new(meta_v1.Time)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.TailLines != nil {
		in, out := &in.TailLines, &out.TailLines
		if *in == nil {
			*out = nil
		} else {
			*out = new(int64)
			**out = **in
		}
	}
	if in.LimitBytes != nil {
		in, out := &in.LimitBytes, &out.LimitBytes
		if *in == nil {
			*out = nil
		} else {
			*out = new(int64)
			**out = **in
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		if *in == nil {
			*out = nil
		} else {
			*out = new(int64)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildLogOptions.
func (in *BuildLogOptions) DeepCopy() *BuildLogOptions {
	if in == nil {
		return nil
	}
	out := new(BuildLogOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BuildLogOptions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildOutput) DeepCopyInto(out *BuildOutput) {
	*out = *in
	if in.To != nil {
		in, out := &in.To, &out.To
		if *in == nil {
			*out = nil
		} else {
			*out = new(core_v1.ObjectReference)
			**out = **in
		}
	}
	if in.PushSecret != nil {
		in, out := &in.PushSecret, &out.PushSecret
		if *in == nil {
			*out = nil
		} else {
			*out = new(core_v1.LocalObjectReference)
			**out = **in
		}
	}
	if in.ImageLabels != nil {
		in, out := &in.ImageLabels, &out.ImageLabels
		*out = make([]ImageLabel, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildOutput.
func (in *BuildOutput) DeepCopy() *BuildOutput {
	if in == nil {
		return nil
	}
	out := new(BuildOutput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildPostCommitSpec) DeepCopyInto(out *BuildPostCommitSpec) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildPostCommitSpec.
func (in *BuildPostCommitSpec) DeepCopy() *BuildPostCommitSpec {
	if in == nil {
		return nil
	}
	out := new(BuildPostCommitSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildRequest) DeepCopyInto(out *BuildRequest) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		if *in == nil {
			*out = nil
		} else {
			*out = new(SourceRevision)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.TriggeredByImage != nil {
		in, out := &in.TriggeredByImage, &out.TriggeredByImage
		if *in == nil {
			*out = nil
		} else {
			*out = new(core_v1.ObjectReference)
			**out = **in
		}
	}
	if in.From != nil {
		in, out := &in.From, &out.From
		if *in == nil {
			*out = nil
		} else {
			*out = new(core_v1.ObjectReference)
			**out = **in
		}
	}
	if in.Binary != nil {
		in, out := &in.Binary, &out.Binary
		if *in == nil {
			*out = nil
		} else {
			*out = new(BinaryBuildSource)
			**out = **in
		}
	}
	if in.LastVersion != nil {
		in, out := &in.LastVersion, &out.LastVersion
		if *in == nil {
			*out = nil
		} else {
			*out = new(int64)
			**out = **in
		}
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]core_v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TriggeredBy != nil {
		in, out := &in.TriggeredBy, &out.TriggeredBy
		*out = make([]BuildTriggerCause, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DockerStrategyOptions != nil {
		in, out := &in.DockerStrategyOptions, &out.DockerStrategyOptions
		if *in == nil {
			*out = nil
		} else {
			*out = new(DockerStrategyOptions)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.SourceStrategyOptions != nil {
		in, out := &in.SourceStrategyOptions, &out.SourceStrategyOptions
		if *in == nil {
			*out = nil
		} else {
			*out = new(SourceStrategyOptions)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildRequest.
func (in *BuildRequest) DeepCopy() *BuildRequest {
	if in == nil {
		return nil
	}
	out := new(BuildRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BuildRequest) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildSource) DeepCopyInto(out *BuildSource) {
	*out = *in
	if in.Binary != nil {
		in, out := &in.Binary, &out.Binary
		if *in == nil {
			*out = nil
		} else {
			*out = new(BinaryBuildSource)
			**out = **in
		}
	}
	if in.Dockerfile != nil {
		in, out := &in.Dockerfile, &out.Dockerfile
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Git != nil {
		in, out := &in.Git, &out.Git
		if *in == nil {
			*out = nil
		} else {
			*out = new(GitBuildSource)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]ImageSource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceSecret != nil {
		in, out := &in.SourceSecret, &out.SourceSecret
		if *in == nil {
			*out = nil
		} else {
			*out = new(core_v1.LocalObjectReference)
			**out = **in
		}
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make([]SecretBuildSource, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildSource.
func (in *BuildSource) DeepCopy() *BuildSource {
	if in == nil {
		return nil
	}
	out := new(BuildSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildSpec) DeepCopyInto(out *BuildSpec) {
	*out = *in
	in.CommonSpec.DeepCopyInto(&out.CommonSpec)
	if in.TriggeredBy != nil {
		in, out := &in.TriggeredBy, &out.TriggeredBy
		*out = make([]BuildTriggerCause, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildSpec.
func (in *BuildSpec) DeepCopy() *BuildSpec {
	if in == nil {
		return nil
	}
	out := new(BuildSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildStatus) DeepCopyInto(out *BuildStatus) {
	*out = *in
	if in.StartTimestamp != nil {
		in, out := &in.StartTimestamp, &out.StartTimestamp
		if *in == nil {
			*out = nil
		} else {
			*out = new(meta_v1.Time)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.CompletionTimestamp != nil {
		in, out := &in.CompletionTimestamp, &out.CompletionTimestamp
		if *in == nil {
			*out = nil
		} else {
			*out = new(meta_v1.Time)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		if *in == nil {
			*out = nil
		} else {
			*out = new(core_v1.ObjectReference)
			**out = **in
		}
	}
	in.Output.DeepCopyInto(&out.Output)
	if in.Stages != nil {
		in, out := &in.Stages, &out.Stages
		*out = make([]StageInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildStatus.
func (in *BuildStatus) DeepCopy() *BuildStatus {
	if in == nil {
		return nil
	}
	out := new(BuildStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildStatusOutput) DeepCopyInto(out *BuildStatusOutput) {
	*out = *in
	if in.To != nil {
		in, out := &in.To, &out.To
		if *in == nil {
			*out = nil
		} else {
			*out = new(BuildStatusOutputTo)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildStatusOutput.
func (in *BuildStatusOutput) DeepCopy() *BuildStatusOutput {
	if in == nil {
		return nil
	}
	out := new(BuildStatusOutput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildStatusOutputTo) DeepCopyInto(out *BuildStatusOutputTo) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildStatusOutputTo.
func (in *BuildStatusOutputTo) DeepCopy() *BuildStatusOutputTo {
	if in == nil {
		return nil
	}
	out := new(BuildStatusOutputTo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildStrategy) DeepCopyInto(out *BuildStrategy) {
	*out = *in
	if in.DockerStrategy != nil {
		in, out := &in.DockerStrategy, &out.DockerStrategy
		if *in == nil {
			*out = nil
		} else {
			*out = new(DockerBuildStrategy)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.SourceStrategy != nil {
		in, out := &in.SourceStrategy, &out.SourceStrategy
		if *in == nil {
			*out = nil
		} else {
			*out = new(SourceBuildStrategy)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.CustomStrategy != nil {
		in, out := &in.CustomStrategy, &out.CustomStrategy
		if *in == nil {
			*out = nil
		} else {
			*out = new(CustomBuildStrategy)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.JenkinsPipelineStrategy != nil {
		in, out := &in.JenkinsPipelineStrategy, &out.JenkinsPipelineStrategy
		if *in == nil {
			*out = nil
		} else {
			*out = new(JenkinsPipelineBuildStrategy)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildStrategy.
func (in *BuildStrategy) DeepCopy() *BuildStrategy {
	if in == nil {
		return nil
	}
	out := new(BuildStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildTriggerCause) DeepCopyInto(out *BuildTriggerCause) {
	*out = *in
	if in.GenericWebHook != nil {
		in, out := &in.GenericWebHook, &out.GenericWebHook
		if *in == nil {
			*out = nil
		} else {
			*out = new(GenericWebHookCause)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.GitHubWebHook != nil {
		in, out := &in.GitHubWebHook, &out.GitHubWebHook
		if *in == nil {
			*out = nil
		} else {
			*out = new(GitHubWebHookCause)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.ImageChangeBuild != nil {
		in, out := &in.ImageChangeBuild, &out.ImageChangeBuild
		if *in == nil {
			*out = nil
		} else {
			*out = new(ImageChangeCause)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.GitLabWebHook != nil {
		in, out := &in.GitLabWebHook, &out.GitLabWebHook
		if *in == nil {
			*out = nil
		} else {
			*out = new(GitLabWebHookCause)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.BitbucketWebHook != nil {
		in, out := &in.BitbucketWebHook, &out.BitbucketWebHook
		if *in == nil {
			*out = nil
		} else {
			*out = new(BitbucketWebHookCause)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildTriggerCause.
func (in *BuildTriggerCause) DeepCopy() *BuildTriggerCause {
	if in == nil {
		return nil
	}
	out := new(BuildTriggerCause)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildTriggerPolicy) DeepCopyInto(out *BuildTriggerPolicy) {
	*out = *in
	if in.GitHubWebHook != nil {
		in, out := &in.GitHubWebHook, &out.GitHubWebHook
		if *in == nil {
			*out = nil
		} else {
			*out = new(WebHookTrigger)
			**out = **in
		}
	}
	if in.GenericWebHook != nil {
		in, out := &in.GenericWebHook, &out.GenericWebHook
		if *in == nil {
			*out = nil
		} else {
			*out = new(WebHookTrigger)
			**out = **in
		}
	}
	if in.ImageChange != nil {
		in, out := &in.ImageChange, &out.ImageChange
		if *in == nil {
			*out = nil
		} else {
			*out = new(ImageChangeTrigger)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.GitLabWebHook != nil {
		in, out := &in.GitLabWebHook, &out.GitLabWebHook
		if *in == nil {
			*out = nil
		} else {
			*out = new(WebHookTrigger)
			**out = **in
		}
	}
	if in.BitbucketWebHook != nil {
		in, out := &in.BitbucketWebHook, &out.BitbucketWebHook
		if *in == nil {
			*out = nil
		} else {
			*out = new(WebHookTrigger)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildTriggerPolicy.
func (in *BuildTriggerPolicy) DeepCopy() *BuildTriggerPolicy {
	if in == nil {
		return nil
	}
	out := new(BuildTriggerPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommonSpec) DeepCopyInto(out *CommonSpec) {
	*out = *in
	in.Source.DeepCopyInto(&out.Source)
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		if *in == nil {
			*out = nil
		} else {
			*out = new(SourceRevision)
			(*in).DeepCopyInto(*out)
		}
	}
	in.Strategy.DeepCopyInto(&out.Strategy)
	in.Output.DeepCopyInto(&out.Output)
	in.Resources.DeepCopyInto(&out.Resources)
	in.PostCommit.DeepCopyInto(&out.PostCommit)
	if in.CompletionDeadlineSeconds != nil {
		in, out := &in.CompletionDeadlineSeconds, &out.CompletionDeadlineSeconds
		if *in == nil {
			*out = nil
		} else {
			*out = new(int64)
			**out = **in
		}
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(OptionalNodeSelector, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommonSpec.
func (in *CommonSpec) DeepCopy() *CommonSpec {
	if in == nil {
		return nil
	}
	out := new(CommonSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommonWebHookCause) DeepCopyInto(out *CommonWebHookCause) {
	*out = *in
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		if *in == nil {
			*out = nil
		} else {
			*out = new(SourceRevision)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommonWebHookCause.
func (in *CommonWebHookCause) DeepCopy() *CommonWebHookCause {
	if in == nil {
		return nil
	}
	out := new(CommonWebHookCause)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomBuildStrategy) DeepCopyInto(out *CustomBuildStrategy) {
	*out = *in
	out.From = in.From
	if in.PullSecret != nil {
		in, out := &in.PullSecret, &out.PullSecret
		if *in == nil {
			*out = nil
		} else {
			*out = new(core_v1.LocalObjectReference)
			**out = **in
		}
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]core_v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make([]SecretSpec, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomBuildStrategy.
func (in *CustomBuildStrategy) DeepCopy() *CustomBuildStrategy {
	if in == nil {
		return nil
	}
	out := new(CustomBuildStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerBuildStrategy) DeepCopyInto(out *DockerBuildStrategy) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		if *in == nil {
			*out = nil
		} else {
			*out = new(core_v1.ObjectReference)
			**out = **in
		}
	}
	if in.PullSecret != nil {
		in, out := &in.PullSecret, &out.PullSecret
		if *in == nil {
			*out = nil
		} else {
			*out = new(core_v1.LocalObjectReference)
			**out = **in
		}
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]core_v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuildArgs != nil {
		in, out := &in.BuildArgs, &out.BuildArgs
		*out = make([]core_v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageOptimizationPolicy != nil {
		in, out := &in.ImageOptimizationPolicy, &out.ImageOptimizationPolicy
		if *in == nil {
			*out = nil
		} else {
			*out = new(ImageOptimizationPolicy)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerBuildStrategy.
func (in *DockerBuildStrategy) DeepCopy() *DockerBuildStrategy {
	if in == nil {
		return nil
	}
	out := new(DockerBuildStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerStrategyOptions) DeepCopyInto(out *DockerStrategyOptions) {
	*out = *in
	if in.BuildArgs != nil {
		in, out := &in.BuildArgs, &out.BuildArgs
		*out = make([]core_v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NoCache != nil {
		in, out := &in.NoCache, &out.NoCache
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerStrategyOptions.
func (in *DockerStrategyOptions) DeepCopy() *DockerStrategyOptions {
	if in == nil {
		return nil
	}
	out := new(DockerStrategyOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericWebHookCause) DeepCopyInto(out *GenericWebHookCause) {
	*out = *in
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		if *in == nil {
			*out = nil
		} else {
			*out = new(SourceRevision)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericWebHookCause.
func (in *GenericWebHookCause) DeepCopy() *GenericWebHookCause {
	if in == nil {
		return nil
	}
	out := new(GenericWebHookCause)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericWebHookEvent) DeepCopyInto(out *GenericWebHookEvent) {
	*out = *in
	if in.Git != nil {
		in, out := &in.Git, &out.Git
		if *in == nil {
			*out = nil
		} else {
			*out = new(GitInfo)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]core_v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DockerStrategyOptions != nil {
		in, out := &in.DockerStrategyOptions, &out.DockerStrategyOptions
		if *in == nil {
			*out = nil
		} else {
			*out = new(DockerStrategyOptions)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericWebHookEvent.
func (in *GenericWebHookEvent) DeepCopy() *GenericWebHookEvent {
	if in == nil {
		return nil
	}
	out := new(GenericWebHookEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitBuildSource) DeepCopyInto(out *GitBuildSource) {
	*out = *in
	in.ProxyConfig.DeepCopyInto(&out.ProxyConfig)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitBuildSource.
func (in *GitBuildSource) DeepCopy() *GitBuildSource {
	if in == nil {
		return nil
	}
	out := new(GitBuildSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitHubWebHookCause) DeepCopyInto(out *GitHubWebHookCause) {
	*out = *in
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		if *in == nil {
			*out = nil
		} else {
			*out = new(SourceRevision)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitHubWebHookCause.
func (in *GitHubWebHookCause) DeepCopy() *GitHubWebHookCause {
	if in == nil {
		return nil
	}
	out := new(GitHubWebHookCause)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitInfo) DeepCopyInto(out *GitInfo) {
	*out = *in
	in.GitBuildSource.DeepCopyInto(&out.GitBuildSource)
	out.GitSourceRevision = in.GitSourceRevision
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitInfo.
func (in *GitInfo) DeepCopy() *GitInfo {
	if in == nil {
		return nil
	}
	out := new(GitInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitLabWebHookCause) DeepCopyInto(out *GitLabWebHookCause) {
	*out = *in
	in.CommonWebHookCause.DeepCopyInto(&out.CommonWebHookCause)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitLabWebHookCause.
func (in *GitLabWebHookCause) DeepCopy() *GitLabWebHookCause {
	if in == nil {
		return nil
	}
	out := new(GitLabWebHookCause)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSourceRevision) DeepCopyInto(out *GitSourceRevision) {
	*out = *in
	out.Author = in.Author
	out.Committer = in.Committer
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSourceRevision.
func (in *GitSourceRevision) DeepCopy() *GitSourceRevision {
	if in == nil {
		return nil
	}
	out := new(GitSourceRevision)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageChangeCause) DeepCopyInto(out *ImageChangeCause) {
	*out = *in
	if in.FromRef != nil {
		in, out := &in.FromRef, &out.FromRef
		if *in == nil {
			*out = nil
		} else {
			*out = new(core_v1.ObjectReference)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageChangeCause.
func (in *ImageChangeCause) DeepCopy() *ImageChangeCause {
	if in == nil {
		return nil
	}
	out := new(ImageChangeCause)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageChangeTrigger) DeepCopyInto(out *ImageChangeTrigger) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		if *in == nil {
			*out = nil
		} else {
			*out = new(core_v1.ObjectReference)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageChangeTrigger.
func (in *ImageChangeTrigger) DeepCopy() *ImageChangeTrigger {
	if in == nil {
		return nil
	}
	out := new(ImageChangeTrigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageLabel) DeepCopyInto(out *ImageLabel) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageLabel.
func (in *ImageLabel) DeepCopy() *ImageLabel {
	if in == nil {
		return nil
	}
	out := new(ImageLabel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageSource) DeepCopyInto(out *ImageSource) {
	*out = *in
	out.From = in.From
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]ImageSourcePath, len(*in))
		copy(*out, *in)
	}
	if in.PullSecret != nil {
		in, out := &in.PullSecret, &out.PullSecret
		if *in == nil {
			*out = nil
		} else {
			*out = new(core_v1.LocalObjectReference)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageSource.
func (in *ImageSource) DeepCopy() *ImageSource {
	if in == nil {
		return nil
	}
	out := new(ImageSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageSourcePath) DeepCopyInto(out *ImageSourcePath) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageSourcePath.
func (in *ImageSourcePath) DeepCopy() *ImageSourcePath {
	if in == nil {
		return nil
	}
	out := new(ImageSourcePath)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JenkinsPipelineBuildStrategy) DeepCopyInto(out *JenkinsPipelineBuildStrategy) {
	*out = *in
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]core_v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JenkinsPipelineBuildStrategy.
func (in *JenkinsPipelineBuildStrategy) DeepCopy() *JenkinsPipelineBuildStrategy {
	if in == nil {
		return nil
	}
	out := new(JenkinsPipelineBuildStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyConfig) DeepCopyInto(out *ProxyConfig) {
	*out = *in
	if in.HTTPProxy != nil {
		in, out := &in.HTTPProxy, &out.HTTPProxy
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.HTTPSProxy != nil {
		in, out := &in.HTTPSProxy, &out.HTTPSProxy
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.NoProxy != nil {
		in, out := &in.NoProxy, &out.NoProxy
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyConfig.
func (in *ProxyConfig) DeepCopy() *ProxyConfig {
	if in == nil {
		return nil
	}
	out := new(ProxyConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretBuildSource) DeepCopyInto(out *SecretBuildSource) {
	*out = *in
	out.Secret = in.Secret
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretBuildSource.
func (in *SecretBuildSource) DeepCopy() *SecretBuildSource {
	if in == nil {
		return nil
	}
	out := new(SecretBuildSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretSpec) DeepCopyInto(out *SecretSpec) {
	*out = *in
	out.SecretSource = in.SecretSource
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretSpec.
func (in *SecretSpec) DeepCopy() *SecretSpec {
	if in == nil {
		return nil
	}
	out := new(SecretSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceBuildStrategy) DeepCopyInto(out *SourceBuildStrategy) {
	*out = *in
	out.From = in.From
	if in.PullSecret != nil {
		in, out := &in.PullSecret, &out.PullSecret
		if *in == nil {
			*out = nil
		} else {
			*out = new(core_v1.LocalObjectReference)
			**out = **in
		}
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]core_v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Incremental != nil {
		in, out := &in.Incremental, &out.Incremental
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceBuildStrategy.
func (in *SourceBuildStrategy) DeepCopy() *SourceBuildStrategy {
	if in == nil {
		return nil
	}
	out := new(SourceBuildStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceControlUser) DeepCopyInto(out *SourceControlUser) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceControlUser.
func (in *SourceControlUser) DeepCopy() *SourceControlUser {
	if in == nil {
		return nil
	}
	out := new(SourceControlUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRevision) DeepCopyInto(out *SourceRevision) {
	*out = *in
	if in.Git != nil {
		in, out := &in.Git, &out.Git
		if *in == nil {
			*out = nil
		} else {
			*out = new(GitSourceRevision)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRevision.
func (in *SourceRevision) DeepCopy() *SourceRevision {
	if in == nil {
		return nil
	}
	out := new(SourceRevision)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceStrategyOptions) DeepCopyInto(out *SourceStrategyOptions) {
	*out = *in
	if in.Incremental != nil {
		in, out := &in.Incremental, &out.Incremental
		if *in == nil {
			*out = nil
		} else {
			*out = new(bool)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceStrategyOptions.
func (in *SourceStrategyOptions) DeepCopy() *SourceStrategyOptions {
	if in == nil {
		return nil
	}
	out := new(SourceStrategyOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageInfo) DeepCopyInto(out *StageInfo) {
	*out = *in
	in.StartTime.DeepCopyInto(&out.StartTime)
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]StepInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageInfo.
func (in *StageInfo) DeepCopy() *StageInfo {
	if in == nil {
		return nil
	}
	out := new(StageInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StepInfo) DeepCopyInto(out *StepInfo) {
	*out = *in
	in.StartTime.DeepCopyInto(&out.StartTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StepInfo.
func (in *StepInfo) DeepCopy() *StepInfo {
	if in == nil {
		return nil
	}
	out := new(StepInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebHookTrigger) DeepCopyInto(out *WebHookTrigger) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebHookTrigger.
func (in *WebHookTrigger) DeepCopy() *WebHookTrigger {
	if in == nil {
		return nil
	}
	out := new(WebHookTrigger)
	in.DeepCopyInto(out)
	return out
}
